{"version":3,"file":"static/js/328.366c4aa7.chunk.js","mappings":"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","sources":["../node_modules/react-particles/esm/Utils.js","../node_modules/react-particles/esm/Particles.js","../node_modules/react-particles/esm/index.js","../node_modules/tsparticles-particles.js/esm/marcbruederlin/Particles.js","../node_modules/tsparticles-particles.js/esm/VincentGarreau/particles.js","../node_modules/tsparticles-particles.js/esm/index.js","../node_modules/tsparticles-move-base/esm/Utils.js","../node_modules/tsparticles-move-base/esm/BaseMover.js","../node_modules/tsparticles-shape-circle/esm/CircleDrawer.js","../node_modules/tsparticles-updater-color/esm/Utils.js","../node_modules/tsparticles-updater-color/esm/ColorUpdater.js","../node_modules/tsparticles-updater-opacity/esm/OpacityUpdater.js","../node_modules/tsparticles-updater-opacity/esm/Utils.js","../node_modules/tsparticles-updater-out-modes/esm/BounceOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/Utils.js","../node_modules/tsparticles-updater-out-modes/esm/DestroyOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/NoneOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/OutOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/OutOfCanvasUpdater.js","../node_modules/tsparticles-updater-size/esm/SizeUpdater.js","../node_modules/tsparticles-updater-size/esm/Utils.js","../node_modules/tsparticles-basic/esm/index.js","../node_modules/tsparticles-move-base/esm/index.js","../node_modules/tsparticles-shape-circle/esm/index.js","../node_modules/tsparticles-updater-color/esm/index.js","../node_modules/tsparticles-updater-opacity/esm/index.js","../node_modules/tsparticles-updater-out-modes/esm/index.js","../node_modules/tsparticles-updater-size/esm/index.js","../node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js","../node_modules/tsparticles-interaction-external-attract/esm/Options/Classes/Attract.js","../node_modules/tsparticles-interaction-external-attract/esm/Attractor.js","../node_modules/tsparticles-interaction-external-bounce/esm/Options/Classes/Bounce.js","../node_modules/tsparticles-interaction-external-bounce/esm/Bouncer.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleBase.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleDiv.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/Bubble.js","../node_modules/tsparticles-interaction-external-bubble/esm/Utils.js","../node_modules/tsparticles-interaction-external-bubble/esm/Bubbler.js","../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/ConnectLinks.js","../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/Connect.js","../node_modules/tsparticles-interaction-external-connect/esm/Utils.js","../node_modules/tsparticles-interaction-external-connect/esm/Connector.js","../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/GrabLinks.js","../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/Grab.js","../node_modules/tsparticles-interaction-external-grab/esm/Utils.js","../node_modules/tsparticles-interaction-external-grab/esm/Grabber.js","../node_modules/tsparticles-interaction-external-pause/esm/Pauser.js","../node_modules/tsparticles-interaction-external-push/esm/Options/Classes/Push.js","../node_modules/tsparticles-interaction-external-push/esm/Pusher.js","../node_modules/tsparticles-interaction-external-remove/esm/Options/Classes/Remove.js","../node_modules/tsparticles-interaction-external-remove/esm/Remover.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseBase.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseDiv.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/Repulse.js","../node_modules/tsparticles-interaction-external-repulse/esm/Repulser.js","../node_modules/tsparticles-interaction-external-slow/esm/Options/Classes/Slow.js","../node_modules/tsparticles-interaction-external-slow/esm/Slower.js","../node_modules/tsparticles-shape-image/esm/GifUtils/Constants.js","../node_modules/tsparticles-shape-image/esm/GifUtils/ByteStream.js","../node_modules/tsparticles-shape-image/esm/GifUtils/Utils.js","../node_modules/tsparticles-shape-image/esm/Utils.js","../node_modules/tsparticles-shape-image/esm/ImageDrawer.js","../node_modules/tsparticles-shape-image/esm/Options/Classes/Preload.js","../node_modules/tsparticles-shape-image/esm/ImagePreloader.js","../node_modules/tsparticles-shape-image/esm/index.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDelay.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDuration.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/Life.js","../node_modules/tsparticles-updater-life/esm/LifeUpdater.js","../node_modules/tsparticles-shape-line/esm/LineDrawer.js","../node_modules/tsparticles-move-parallax/esm/ParallaxMover.js","../node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js","../node_modules/tsparticles-interaction-particles-attract/esm/Attractor.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Absorb.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Bounce.js","../node_modules/tsparticles-interaction-particles-collisions/esm/ResolveCollision.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Destroy.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js","../node_modules/tsparticles-interaction-particles-links/esm/CircleWarp.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksShadow.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksTriangle.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/Links.js","../node_modules/tsparticles-interaction-particles-links/esm/Linker.js","../node_modules/tsparticles-interaction-particles-links/esm/Utils.js","../node_modules/tsparticles-interaction-particles-links/esm/LinkInstance.js","../node_modules/tsparticles-interaction-particles-links/esm/plugin.js","../node_modules/tsparticles-interaction-particles-links/esm/index.js","../node_modules/tsparticles-interaction-particles-links/esm/interaction.js","../node_modules/tsparticles-shape-polygon/esm/PolygonDrawerBase.js","../node_modules/tsparticles-shape-polygon/esm/PolygonDrawer.js","../node_modules/tsparticles-shape-polygon/esm/TriangleDrawer.js","../node_modules/tsparticles-shape-polygon/esm/index.js","../node_modules/tsparticles-updater-rotate/esm/Options/Classes/RotateAnimation.js","../node_modules/tsparticles-updater-rotate/esm/Options/Classes/Rotate.js","../node_modules/tsparticles-updater-rotate/esm/RotateUpdater.js","../node_modules/tsparticles-shape-square/esm/SquareDrawer.js","../node_modules/tsparticles-shape-star/esm/StarDrawer.js","../node_modules/tsparticles-updater-stroke-color/esm/Utils.js","../node_modules/tsparticles-updater-stroke-color/esm/StrokeColorUpdater.js","../node_modules/tsparticles-shape-text/esm/TextDrawer.js","../node_modules/tsparticles-slim/esm/index.js","../node_modules/tsparticles-move-parallax/esm/index.js","../node_modules/tsparticles-interaction-external-attract/esm/index.js","../node_modules/tsparticles-interaction-external-bounce/esm/index.js","../node_modules/tsparticles-interaction-external-bubble/esm/index.js","../node_modules/tsparticles-interaction-external-connect/esm/index.js","../node_modules/tsparticles-interaction-external-grab/esm/index.js","../node_modules/tsparticles-interaction-external-pause/esm/index.js","../node_modules/tsparticles-interaction-external-push/esm/index.js","../node_modules/tsparticles-interaction-external-remove/esm/index.js","../node_modules/tsparticles-interaction-external-repulse/esm/index.js","../node_modules/tsparticles-interaction-external-slow/esm/index.js","../node_modules/tsparticles-interaction-particles-attract/esm/index.js","../node_modules/tsparticles-interaction-particles-collisions/esm/index.js","../node_modules/tsparticles-plugin-easing-quad/esm/index.js","../node_modules/tsparticles-shape-line/esm/index.js","../node_modules/tsparticles-shape-square/esm/index.js","../node_modules/tsparticles-shape-star/esm/index.js","../node_modules/tsparticles-shape-text/esm/index.js","../node_modules/tsparticles-updater-life/esm/index.js","../node_modules/tsparticles-updater-rotate/esm/index.js","../node_modules/tsparticles-updater-stroke-color/esm/index.js","../node_modules/tsparticles-engine/esm/Core/Utils/Range.js","../node_modules/react-bootstrap-icons/dist/icons/arrow-right-circle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Circle.js","../node_modules/tsparticles-engine/esm/Utils/NumberUtils.js","../node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Constants.js","../node_modules/tsparticles-engine/esm/Utils/Utils.js","../node_modules/tsparticles-engine/esm/Core/Canvas.js","../node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js","../node_modules/tsparticles-engine/esm/Options/Classes/Background/Background.js","../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js","../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js","../node_modules/tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ResizeEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js","../node_modules/tsparticles-engine/esm/Options/Classes/ManualParticle.js","../node_modules/tsparticles-engine/esm/Options/Classes/Responsive.js","../node_modules/tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js","../node_modules/tsparticles-engine/esm/Options/Classes/Theme/Theme.js","../node_modules/tsparticles-engine/esm/Options/Classes/ColorAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/HslAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/AnimatableColor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrailFill.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shadow.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Stroke.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js","../node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js","../node_modules/tsparticles-engine/esm/Options/Classes/Options.js","../node_modules/tsparticles-engine/esm/Core/Utils/InteractionManager.js","../node_modules/tsparticles-engine/esm/Core/Particle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Point.js","../node_modules/tsparticles-engine/esm/Core/Utils/QuadTree.js","../node_modules/tsparticles-engine/esm/Core/Particles.js","../node_modules/tsparticles-engine/esm/Core/Retina.js","../node_modules/tsparticles-engine/esm/Core/Container.js","../node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js","../node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js","../node_modules/tsparticles-engine/esm/Core/Engine.js","../node_modules/tsparticles-engine/esm/Utils/HslColorManager.js","../node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js","../node_modules/tsparticles-engine/esm/index.js","../node_modules/tsparticles-engine/esm/init.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector.js","../node_modules/tsparticles-engine/esm/Options/Classes/AnimationOptions.js","../node_modules/tsparticles-engine/esm/Utils/ColorUtils.js","../node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js","../node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Random.js","../node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js"],"sourcesContent":["const isObject = (val) => typeof val === \"object\" && val !== null;\nexport function deepCompare(obj1, obj2, excludeKeyFn = () => false) {\n    if (!isObject(obj1) || !isObject(obj2)) {\n        return obj1 === obj2;\n    }\n    const keys1 = Object.keys(obj1).filter(key => !excludeKeyFn(key)), keys2 = Object.keys(obj2).filter(key => !excludeKeyFn(key));\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const value1 = obj1[key], value2 = obj2[key];\n        if (isObject(value1) && isObject(value2)) {\n            if (value1 === obj2 && value2 === obj1) {\n                continue;\n            }\n            if (!deepCompare(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (Array.isArray(value1) && Array.isArray(value2)) {\n            if (!deepCompareArrays(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (value1 !== value2) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction deepCompareArrays(arr1, arr2, excludeKeyFn) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        const val1 = arr1[i], val2 = arr2[i];\n        if (Array.isArray(val1) && Array.isArray(val2)) {\n            if (!deepCompareArrays(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (isObject(val1) && isObject(val2)) {\n            if (!deepCompare(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (val1 !== val2) {\n            return false;\n        }\n    }\n    return true;\n}\n","import React, { Component } from \"react\";\nimport { tsParticles } from \"tsparticles-engine\";\nimport { deepCompare } from \"./Utils\";\nconst defaultId = \"tsparticles\";\nclass Particles extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            init: false,\n            library: undefined,\n        };\n    }\n    destroy() {\n        if (!this.state.library) {\n            return;\n        }\n        this.state.library.destroy();\n        this.setState({\n            library: undefined,\n        });\n    }\n    shouldComponentUpdate(nextProps) {\n        const nextOptions = nextProps.options ?? nextProps.params, currentOptions = this.props.options ?? this.props.params;\n        return (nextProps.url !== this.props.url ||\n            nextProps.id !== this.props.id ||\n            nextProps.canvasClassName !== this.props.canvasClassName ||\n            nextProps.className !== this.props.className ||\n            nextProps.height !== this.props.height ||\n            nextProps.width !== this.props.width ||\n            !deepCompare(nextProps.style, this.props.style) ||\n            nextProps.init !== this.props.init ||\n            nextProps.loaded !== this.props.loaded ||\n            !deepCompare(nextOptions, currentOptions, key => key.startsWith(\"_\")));\n    }\n    componentDidUpdate() {\n        this.refresh();\n    }\n    forceUpdate() {\n        this.refresh().then(() => {\n            super.forceUpdate();\n        });\n    }\n    componentDidMount() {\n        (async () => {\n            if (this.props.init) {\n                await this.props.init(tsParticles);\n            }\n            this.setState({\n                init: true,\n            }, async () => {\n                await this.loadParticles();\n            });\n        })();\n    }\n    componentWillUnmount() {\n        this.destroy();\n    }\n    render() {\n        const { width, height, className, canvasClassName, id } = this.props;\n        return (React.createElement(\"div\", { className: className, id: id },\n            React.createElement(\"canvas\", { className: canvasClassName, style: {\n                    ...this.props.style,\n                    width,\n                    height,\n                } })));\n    }\n    async refresh() {\n        this.destroy();\n        await this.loadParticles();\n    }\n    async loadParticles() {\n        if (!this.state.init) {\n            return;\n        }\n        const id = this.props.id ?? Particles.defaultProps.id ?? defaultId, container = await tsParticles.load({\n            url: this.props.url,\n            id,\n            options: this.props.options ?? this.props.params,\n        });\n        if (this.props.container) {\n            this.props.container.current = container;\n        }\n        this.setState({\n            library: container,\n        });\n        if (this.props.loaded) {\n            await this.props.loaded(container);\n        }\n    }\n}\nParticles.defaultProps = {\n    width: \"100%\",\n    height: \"100%\",\n    options: {},\n    style: {},\n    url: undefined,\n    id: defaultId,\n};\nexport default Particles;\n","import Particles from \"./Particles\";\nexport default Particles;\nexport { Particles };\n","import { tsParticles } from \"tsparticles-engine\";\nexport class Particles {\n    static init(options) {\n        const particles = new Particles(), selector = options.selector;\n        if (!selector) {\n            throw new Error(\"No selector provided\");\n        }\n        const el = document.querySelector(selector);\n        if (!el) {\n            throw new Error(\"No element found for selector\");\n        }\n        tsParticles\n            .set(selector.replace(\".\", \"\").replace(\"!\", \"\"), el, {\n            fullScreen: {\n                enable: false,\n            },\n            particles: {\n                color: {\n                    value: options.color ?? \"!000000\",\n                },\n                links: {\n                    color: \"random\",\n                    distance: options.minDistance ?? 120,\n                    enable: options.connectParticles ?? false,\n                },\n                move: {\n                    enable: true,\n                    speed: options.speed ?? 0.5,\n                },\n                number: {\n                    value: options.maxParticles ?? 100,\n                },\n                size: {\n                    value: { min: 1, max: options.sizeVariations ?? 3 },\n                },\n            },\n            responsive: options.responsive?.map((responsive) => ({\n                maxWidth: responsive.breakpoint,\n                options: {\n                    particles: {\n                        color: {\n                            value: responsive.options?.color,\n                        },\n                        links: {\n                            distance: responsive.options?.minDistance,\n                            enable: responsive.options?.connectParticles,\n                        },\n                        number: {\n                            value: options.maxParticles,\n                        },\n                        move: {\n                            enable: true,\n                            speed: responsive.options?.speed,\n                        },\n                        size: {\n                            value: responsive.options?.sizeVariations,\n                        },\n                    },\n                },\n            })),\n        })\n            .then((container) => {\n            particles._container = container;\n        });\n        return particles;\n    }\n    destroy() {\n        const container = this._container;\n        container && container.destroy();\n    }\n    pauseAnimation() {\n        const container = this._container;\n        container && container.pause();\n    }\n    resumeAnimation() {\n        const container = this._container;\n        container && container.play();\n    }\n}\n","const initParticlesJS = (engine) => {\n    const particlesJS = (tagId, options) => {\n        return engine.load(tagId, options);\n    };\n    particlesJS.load = (tagId, pathConfigJson, callback) => {\n        engine\n            .loadJSON(tagId, pathConfigJson)\n            .then((container) => {\n            if (container) {\n                callback(container);\n            }\n        })\n            .catch(() => {\n            callback(undefined);\n        });\n    };\n    particlesJS.setOnClickHandler = (callback) => {\n        engine.setOnClickHandler(callback);\n    };\n    const pJSDom = engine.dom();\n    return { particlesJS, pJSDom };\n};\nexport { initParticlesJS };\n","import { Particles } from \"./marcbruederlin/Particles\";\nimport { initParticlesJS } from \"./VincentGarreau/particles\";\nconst initPjs = (engine) => {\n    const { particlesJS, pJSDom } = initParticlesJS(engine);\n    window.particlesJS = particlesJS;\n    window.pJSDom = pJSDom;\n    window.Particles = Particles;\n    return { particlesJS, pJSDom, Particles };\n};\nexport { initPjs };\n","import { clamp, getDistances, getRandom, } from \"tsparticles-engine\";\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    if (((hDistance && dxFixed >= hDistance) || (vDistance && dyFixed >= vDistance)) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance && ((pos.x < initialPosition.x && vel.x < 0) || (pos.x > initialPosition.x && vel.x > 0))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance && ((pos.y < initialPosition.y && vel.y < 0) || (pos.y > initialPosition.y && vel.y > 0))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {\n    applyPath(particle, delta);\n    const gravityOptions = particle.gravity, gravityFactor = gravityOptions?.enable && gravityOptions.inverse ? -1 : 1;\n    if (moveDrift && moveSpeed) {\n        particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n    }\n    if (gravityOptions?.enable && moveSpeed) {\n        particle.velocity.y += (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n    }\n    const decay = particle.moveDecay;\n    particle.velocity.multTo(decay);\n    const velocity = particle.velocity.mult(moveSpeed);\n    if (gravityOptions?.enable &&\n        maxSpeed > 0 &&\n        ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n            (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n    }\n    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n    velocity.multTo(zVelocityFactor);\n    const { position } = particle;\n    position.addTo(velocity);\n    if (moveOptions.vibrate) {\n        position.x += Math.sin(position.x * Math.cos(position.y));\n        position.y += Math.cos(position.y * Math.sin(position.x));\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const updateFunc = {\n        x: particle.spin.direction === \"clockwise\" ? Math.cos : Math.sin,\n        y: particle.spin.direction === \"clockwise\" ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height);\n    if (particle.spin.radius > maxCanvasSize / 2) {\n        particle.spin.radius = maxCanvasSize / 2;\n        particle.spin.acceleration *= -1;\n    }\n    else if (particle.spin.radius < 0) {\n        particle.spin.radius = 0;\n        particle.spin.acceleration *= -1;\n    }\n    particle.spin.angle += (moveSpeed / 100) * (1 - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = particle.pathGenerator?.generate(particle, delta);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -1, 1);\n        particle.velocity.y = clamp(particle.velocity.y, -1, 1);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : 1;\n}\n","import { getDistance, getRangeMax, getRangeValue, } from \"tsparticles-engine\";\nimport { applyDistance, getProximitySpeedFactor, move, spin } from \"./Utils\";\nconst diffFactor = 2;\nexport class BaseMover {\n    constructor() {\n        this._initSpin = (particle) => {\n            const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n            if (!spinOptions.enable) {\n                return;\n            }\n            const spinPos = spinOptions.position ?? { x: 50, y: 50 }, spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        };\n    }\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        this._initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio, slowFactor = getProximitySpeedFactor(particle), baseSpeed = (particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio) *\n            container.retina.reduceFactor, moveDrift = (particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio), maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, moveSpeed = (baseSpeed * sizeFactor * slowFactor * (delta.factor || 1)) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        applyDistance(particle);\n    }\n}\n","import { isObject } from \"tsparticles-engine\";\nexport class CircleDrawer {\n    draw(context, particle, radius) {\n        if (!particle.circleRange) {\n            particle.circleRange = { min: 0, max: Math.PI * 2 };\n        }\n        const circleRange = particle.circleRange;\n        context.arc(0, 0, radius, circleRange.min, circleRange.max, false);\n    }\n    getSidesCount() {\n        return 12;\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {\n            max: 360,\n            min: 0,\n        };\n        particle.circleRange = !isObject(angle)\n            ? {\n                min: 0,\n                max: (angle * Math.PI) / 180,\n            }\n            : { min: (angle.min * Math.PI) / 180, max: (angle.max * Math.PI) / 180 };\n    }\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateColor(particle, delta) {\n    const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateColor } from \"./Utils\";\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((color?.h.value !== undefined && hAnimation.enable) ||\n                (color?.s.value !== undefined && sAnimation.enable) ||\n                (color?.l.value !== undefined && lAnimation.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle, delta);\n    }\n}\n","import { getRandom, getRangeValue, initParticleNumericAnimationValue, } from \"tsparticles-engine\";\nimport { updateOpacity } from \"./Utils\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, 1);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / 100) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            ((particle.opacity.maxLoops ?? 0) <= 0 ||\n                ((particle.opacity.maxLoops ?? 0) > 0 &&\n                    (particle.opacity.loops ?? 0) < (particle.opacity.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateOpacity(particle, delta);\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.opacity.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateOpacity(particle, delta) {\n    const data = particle.opacity;\n    if (particle.destroyed || !data?.enable || ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n    }\n    if (data.velocity && data.decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { calculateBounds, } from \"tsparticles-engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            \"bounce\",\n            \"bounce-vertical\",\n            \"bounce-horizontal\",\n            \"bounceVertical\",\n            \"bounceHorizontal\",\n            \"split\",\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { getValue } from \"tsparticles-engine\";\nexport function bounceHorizontal(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-horizontal\" &&\n        data.outMode !== \"bounceHorizontal\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"left\" && data.direction !== \"right\")) {\n        return;\n    }\n    if (data.bounds.right < 0 && data.direction === \"left\") {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === \"right\" && data.bounds.right >= data.canvasSize.width && velocity > 0) ||\n        (data.direction === \"left\" && data.bounds.left <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.horizontal);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= 0 && data.direction === \"left\") {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-vertical\" &&\n        data.outMode !== \"bounceVertical\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"bottom\" && data.direction !== \"top\")) {\n        return;\n    }\n    if (data.bounds.bottom < 0 && data.direction === \"top\") {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === \"bottom\" && data.bounds.bottom >= data.canvasSize.height && velocity > 0) ||\n        (data.direction === \"top\" && data.bounds.top <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.vertical);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= 0 && data.direction === \"top\") {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\n","import { Vector, getDistances, isPointInside, } from \"tsparticles-engine\";\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"destroy\"];\n    }\n    update(particle, direction, _delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"normal\":\n            case \"outside\":\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case \"inside\": {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                const { x: vx, y: vy } = particle.velocity;\n                if ((vx < 0 && dx > particle.moveCenter.radius) ||\n                    (vy < 0 && dy > particle.moveCenter.radius) ||\n                    (vx >= 0 && dx < -particle.moveCenter.radius) ||\n                    (vy >= 0 && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n}\n","import { Vector, isPointInside, } from \"tsparticles-engine\";\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"none\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === \"left\" || direction === \"right\")) ||\n            (particle.options.move.distance.vertical &&\n                (direction === \"top\" || direction === \"bottom\"))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container;\n        const canvasSize = container.canvas.size;\n        const pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < 0 && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < 0 && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === \"bottom\") ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === \"top\")) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"tsparticles-engine\";\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"out\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"inside\": {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= 0 && dx >= 0) || (vy <= 0 && dy >= 0) || (vx >= 0 && dx <= 0) || (vy >= 0 && dy <= 0)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case \"outside\": {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case \"normal\": {\n                        const wrap = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === \"right\" &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === \"left\" && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === \"bottom\" &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === \"top\" && nextBounds.bottom < -particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { BounceOutMode } from \"./BounceOutMode\";\nimport { DestroyOutMode } from \"./DestroyOutMode\";\nimport { NoneOutMode } from \"./NoneOutMode\";\nimport { OutOutMode } from \"./OutOutMode\";\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this.container = container;\n        this._updateOutMode = (particle, delta, outMode, direction) => {\n            for (const updater of this.updaters) {\n                updater.update(particle, direction, delta, outMode);\n            }\n        };\n        this.updaters = [\n            new BounceOutMode(container),\n            new DestroyOutMode(container),\n            new OutOutMode(container),\n            new NoneOutMode(container),\n        ];\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        const outModes = particle.options.move.outModes;\n        this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, \"bottom\");\n        this._updateOutMode(particle, delta, outModes.left ?? outModes.default, \"left\");\n        this._updateOutMode(particle, delta, outModes.right ?? outModes.default, \"right\");\n        this._updateOutMode(particle, delta, outModes.top ?? outModes.default, \"top\");\n    }\n}\n","import { getRandom } from \"tsparticles-engine\";\nimport { updateSize } from \"./Utils\";\nexport class SizeUpdater {\n    init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? 0) <= 0 ||\n                ((particle.size.maxLoops ?? 0) > 0 && (particle.size.loops ?? 0) < (particle.size.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        particle.size.loops = 0;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateSize(particle, delta);\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.size.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateSize(particle, delta) {\n    const data = particle.size;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const sizeVelocity = (data.velocity ?? 0) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += sizeVelocity;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= sizeVelocity;\n            }\n    }\n    if (data.velocity && decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { loadBaseMover } from \"tsparticles-move-base\";\nimport { loadCircleShape } from \"tsparticles-shape-circle\";\nimport { loadColorUpdater } from \"tsparticles-updater-color\";\nimport { loadOpacityUpdater } from \"tsparticles-updater-opacity\";\nimport { loadOutModesUpdater } from \"tsparticles-updater-out-modes\";\nimport { loadSizeUpdater } from \"tsparticles-updater-size\";\nexport async function loadBasic(engine, refresh = true) {\n    await loadBaseMover(engine, false);\n    await loadCircleShape(engine, false);\n    await loadColorUpdater(engine, false);\n    await loadOpacityUpdater(engine, false);\n    await loadOutModesUpdater(engine, false);\n    await loadSizeUpdater(engine, false);\n    await engine.refresh(refresh);\n}\n","import { BaseMover } from \"./BaseMover\";\nexport async function loadBaseMover(engine, refresh = true) {\n    await engine.addMover(\"base\", () => new BaseMover(), refresh);\n}\n","import { CircleDrawer } from \"./CircleDrawer\";\nexport async function loadCircleShape(engine, refresh = true) {\n    await engine.addShape(\"circle\", new CircleDrawer(), refresh);\n}\n","import { ColorUpdater } from \"./ColorUpdater\";\nexport async function loadColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"color\", (container) => new ColorUpdater(container), refresh);\n}\n","import { OpacityUpdater } from \"./OpacityUpdater\";\nexport async function loadOpacityUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"opacity\", (container) => new OpacityUpdater(container), refresh);\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater\";\nexport async function loadOutModesUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"outModes\", (container) => new OutOfCanvasUpdater(container), refresh);\n}\n","import { SizeUpdater } from \"./SizeUpdater\";\nexport async function loadSizeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"size\", () => new SizeUpdater(), refresh);\n}\n","export class ExternalInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"external\";\n    }\n}\n","export class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = \"ease-out-quad\";\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Vector, clamp, getDistances, getEasing, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Attract } from \"./Options/Classes/Attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickAttract = () => {\n            const container = this.container;\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            const { attract } = container;\n            if (!attract.finish) {\n                if (!attract.count) {\n                    attract.count = 0;\n                }\n                attract.count++;\n                if (attract.count === container.particles.count) {\n                    attract.finish = true;\n                }\n            }\n            if (attract.clicking) {\n                const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n                if (!attractRadius || attractRadius < 0 || !mousePos) {\n                    return;\n                }\n                this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n            }\n            else if (attract.clicking === false) {\n                attract.particles = [];\n            }\n            return;\n        };\n        this._hoverAttract = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n            if (!attractRadius || attractRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        };\n        this._processAttract = (position, attractRadius, area) => {\n            const container = this.container, attractOptions = container.actualOptions.interactivity.modes.attract;\n            if (!attractOptions) {\n                return;\n            }\n            const query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position);\n                const velocity = attractOptions.speed * attractOptions.factor;\n                const attractFactor = clamp(getEasing(attractOptions.easing)(1 - distance / attractRadius) * velocity, 0, attractOptions.maxSpeed);\n                const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n                particle.position.subFrom(normVec);\n            }\n        };\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== \"attract\") {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                if (!container.attract) {\n                    container.attract = { particles: [] };\n                }\n                container.attract.clicking = false;\n            }, attract.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this._hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this._clickAttract();\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source?.attract);\n        }\n    }\n    reset() {\n    }\n}\n","export class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, isDivModeEnabled, isInArray, mouseMoveEvent, rectBounce, } from \"tsparticles-engine\";\nimport { Bounce } from \"./Options/Classes/Bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._processBounce = (position, radius, area) => {\n            const query = this.container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                if (area instanceof Circle) {\n                    circleBounce(circleBounceDataFromParticle(particle), {\n                        position,\n                        radius,\n                        mass: (radius ** 2 * Math.PI) / 2,\n                        velocity: Vector.origin,\n                        factor: Vector.origin,\n                    });\n                }\n                else if (area instanceof Rectangle) {\n                    rectBounce(particle, calculateBounds(position, radius));\n                }\n            }\n        };\n        this._processMouseBounce = () => {\n            const container = this.container, pxRatio = container.retina.pixelRatio, tolerance = 10 * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n            if (!radius || radius < 0 || !mousePos) {\n                return;\n            }\n            this._processBounce(mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance));\n        };\n        this._singleSelectorBounce = (selector, div) => {\n            const container = this.container, query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, radius = (elem.offsetWidth / 2) * pxRatio, tolerance = 10 * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, radius + tolerance)\n                    : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n                this._processBounce(pos, radius, area);\n            });\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"bounce\", hoverMode)) {\n            this._processMouseBounce();\n        }\n        else {\n            divModeExecute(\"bounce\", divs, (selector, div) => this._singleSelectorBounce(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((mouse.position && events.onHover.enable && isInArray(\"bounce\", events.onHover.mode)) ||\n            isDivModeEnabled(\"bounce\", divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor, executeOnSingleOrMultiple, isArray, } from \"tsparticles-engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = isArray(this.color) ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, (color) => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nimport { BubbleDiv } from \"./BubbleDiv\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nexport function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"tsparticles-engine\";\nimport { Bubble } from \"./Options/Classes/Bubble\";\nimport { calculateBubbleValue } from \"./Utils\";\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._clickBubble = () => {\n            const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || !mouseClickPos) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            const distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, (p) => this.isEnabled(p)), { bubble } = container;\n            for (const particle of query) {\n                if (!bubble.clicking) {\n                    continue;\n                }\n                particle.bubble.inRange = !bubble.durationEnd;\n                const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n                if (timeSpent > bubbleOptions.duration) {\n                    bubble.durationEnd = true;\n                }\n                if (timeSpent > bubbleOptions.duration * 2) {\n                    bubble.clicking = false;\n                    bubble.durationEnd = false;\n                }\n                const sizeData = {\n                    bubbleObj: {\n                        optValue: container.retina.bubbleModeSize,\n                        value: particle.bubble.radius,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                        value: particle.size.value,\n                    },\n                    type: \"size\",\n                };\n                this._process(particle, distMouse, timeSpent, sizeData);\n                const opacityData = {\n                    bubbleObj: {\n                        optValue: bubbleOptions.opacity,\n                        value: particle.bubble.opacity,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.opacity.value),\n                        value: particle.opacity?.value ?? 1,\n                    },\n                    type: \"opacity\",\n                };\n                this._process(particle, distMouse, timeSpent, opacityData);\n                if (!bubble.durationEnd && distMouse <= distance) {\n                    this._hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n        };\n        this._hoverBubble = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0 || mousePos === undefined) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                particle.bubble.inRange = true;\n                const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = 1 - pointDistance / distance;\n                if (pointDistance <= distance) {\n                    if (ratio >= 0 && container.interactivity.status === mouseMoveEvent) {\n                        this._hoverBubbleSize(particle, ratio);\n                        this._hoverBubbleOpacity(particle, ratio);\n                        this._hoverBubbleColor(particle, ratio);\n                    }\n                }\n                else {\n                    this.reset(particle);\n                }\n                if (container.interactivity.status === mouseLeaveEvent) {\n                    this.reset(particle);\n                }\n            }\n        };\n        this._hoverBubbleColor = (particle, ratio, divBubble) => {\n            const options = this.container.actualOptions, bubbleOptions = divBubble ?? options.interactivity.modes.bubble;\n            if (!bubbleOptions) {\n                return;\n            }\n            if (!particle.bubble.finalColor) {\n                const modeColor = bubbleOptions.color;\n                if (!modeColor) {\n                    return;\n                }\n                const bubbleColor = itemFromSingleOrMultiple(modeColor);\n                particle.bubble.finalColor = rangeColorToHsl(bubbleColor);\n            }\n            if (!particle.bubble.finalColor) {\n                return;\n            }\n            if (bubbleOptions.mix) {\n                particle.bubble.color = undefined;\n                const pColor = particle.getFillColor();\n                particle.bubble.color = pColor\n                    ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, 1 - ratio, ratio))\n                    : particle.bubble.finalColor;\n            }\n            else {\n                particle.bubble.color = particle.bubble.finalColor;\n            }\n        };\n        this._hoverBubbleOpacity = (particle, ratio, divBubble) => {\n            const container = this.container, options = container.actualOptions, modeOpacity = divBubble?.opacity ?? options.interactivity.modes.bubble?.opacity;\n            if (!modeOpacity) {\n                return;\n            }\n            const optOpacity = particle.options.opacity.value, pOpacity = particle.opacity?.value ?? 1, opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n            if (opacity !== undefined) {\n                particle.bubble.opacity = opacity;\n            }\n        };\n        this._hoverBubbleSize = (particle, ratio, divBubble) => {\n            const container = this.container, modeSize = divBubble?.size ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n            if (modeSize === undefined) {\n                return;\n            }\n            const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio, pSize = particle.size.value, size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n            if (size !== undefined) {\n                particle.bubble.radius = size;\n            }\n        };\n        this._process = (particle, distMouse, timeSpent, data) => {\n            const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || bubbleParam === undefined) {\n                return;\n            }\n            const bubbleDuration = bubbleOptions.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;\n            if (!bubbleDistance || bubbleDistance < 0 || bubbleParam === particlesParam) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            if (container.bubble.durationEnd) {\n                if (pObjBubble) {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble ?? pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                        if (type === \"size\") {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === \"opacity\") {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n        };\n        this._singleSelectorHover = (delta, selector, div) => {\n            const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n            if (!bubble || !selectors.length) {\n                return;\n            }\n            selectors.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    if (!area.contains(particle.getPosition())) {\n                        continue;\n                    }\n                    particle.bubble.inRange = true;\n                    const divs = bubble.divs, divBubble = divMode(divs, elem);\n                    if (!particle.bubble.div || particle.bubble.div !== elem) {\n                        this.clear(particle, delta, true);\n                        particle.bubble.div = elem;\n                    }\n                    this._hoverBubbleSize(particle, 1, divBubble);\n                    this._hoverBubbleOpacity(particle, 1, divBubble);\n                    this._hoverBubbleColor(particle, 1, divBubble);\n                }\n            });\n        };\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== \"bubble\") {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    async interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(\"bubble\", hoverMode)) {\n            this._hoverBubble();\n        }\n        else if (clickEnabled && isInArray(\"bubble\", clickMode)) {\n            this._clickBubble();\n        }\n        else {\n            divModeExecute(\"bubble\", divs, (selector, div) => this._singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, { onClick, onDiv, onHover } = events, divBubble = isDivModeEnabled(\"bubble\", onDiv);\n        if (!(divBubble || (onHover.enable && mouse.position) || (onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        return isInArray(\"bubble\", onHover.mode) || isInArray(\"bubble\", onClick.mode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source?.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n}\n","export class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { ConnectLinks } from \"./ConnectLinks\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, } from \"tsparticles-engine\";\nexport function gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(1, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nexport function drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nexport function lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nexport function drawConnection(container, p1, p2) {\n    container.canvas.draw((ctx) => {\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, p1.retina.linksWidth ?? 0, ls, pos1, pos2);\n    });\n}\n","import { ExternalInteractorBase, isInArray, } from \"tsparticles-engine\";\nimport { Connect } from \"./Options/Classes/Connect\";\nimport { drawConnection } from \"./Utils\";\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!container.retina.connectModeDistance ||\n                container.retina.connectModeDistance < 0 ||\n                !container.retina.connectModeRadius ||\n                container.retina.connectModeRadius < 0 ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(container.retina.connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            let i = 0;\n            for (const p1 of query) {\n                const pos1 = p1.getPosition();\n                for (const p2 of query.slice(i + 1)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(container.retina.connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n                ++i;\n            }\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(\"connect\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source?.connect);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { GrabLinks } from \"./GrabLinks\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n    }\n}\n","import { drawLine, getStyleFromRgb } from \"tsparticles-engine\";\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nexport function drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw((ctx) => {\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, particle.retina.linksWidth ?? 0, beginPos, mousePos, lineColor, opacity);\n    });\n}\n","import { ExternalInteractorBase, getDistance, getLinkColor, getLinkRandomColor, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Grab } from \"./Options/Classes/Grab\";\nimport { drawGrab } from \"./Utils\";\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= 0) {\n                continue;\n            }\n            const optColor = grabLineOptions.color ?? particle.options.links?.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                continue;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source?.grab);\n        }\n    }\n    reset() {\n    }\n}\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"pause\") {\n                return;\n            }\n            const container = this.container;\n            if (container.getAnimationStatus()) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map((t) => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, itemFromArray, } from \"tsparticles-engine\";\nimport { Push } from \"./Options/Classes/Push\";\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"push\") {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const quantity = getRangeValue(pushOptions.quantity);\n            if (quantity <= 0) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            container.particles.push(quantity, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source?.push);\n        }\n    }\n    reset() {\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, } from \"tsparticles-engine\";\nimport { Remove } from \"./Options/Classes/Remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== \"remove\") {\n                return;\n            }\n            const removeNb = getRangeValue(options.interactivity.modes.remove.quantity);\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source?.remove);\n        }\n    }\n    reset() {\n    }\n}\n","export class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = \"ease-out-quad\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nimport { RepulseDiv } from \"./RepulseDiv\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, getEasing, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Repulse } from \"./Options/Classes/Repulse\";\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickRepulse = () => {\n            const container = this.container, repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const repulse = container.repulse || { particles: [] };\n            if (!repulse.finish) {\n                if (!repulse.count) {\n                    repulse.count = 0;\n                }\n                repulse.count++;\n                if (repulse.count === container.particles.count) {\n                    repulse.finish = true;\n                }\n            }\n            if (repulse.clicking) {\n                const repulseDistance = container.retina.repulseModeDistance;\n                if (!repulseDistance || repulseDistance < 0) {\n                    return;\n                }\n                const repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n                if (mouseClickPos === undefined) {\n                    return;\n                }\n                const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** 2, velocity = repulseOptions.speed, force = (-repulseRadius * velocity) / d;\n                    if (d <= repulseRadius) {\n                        repulse.particles.push(particle);\n                        const vect = Vector.create(dx, dy);\n                        vect.length = force;\n                        particle.velocity.setTo(vect);\n                    }\n                }\n            }\n            else if (repulse.clicking === false) {\n                for (const particle of repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                repulse.particles = [];\n            }\n        };\n        this._hoverRepulse = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n            if (!repulseRadius || repulseRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n        };\n        this._processRepulse = (position, repulseRadius, area, divRepulse) => {\n            const container = this.container, query = container.particles.quadTree.query(area, (p) => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position), velocity = (divRepulse?.speed ?? repulseOptions.speed) * repulseOptions.factor, repulseFactor = clamp(getEasing(repulseOptions.easing)(1 - distance / repulseRadius) * velocity, 0, repulseOptions.maxSpeed), normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n                particle.position.addTo(normVec);\n            }\n        };\n        this._singleSelectorRepulse = (selector, div) => {\n            const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n            if (!repulse) {\n                return;\n            }\n            const query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n                this._processRepulse(pos, repulseRadius, area, divRepulse);\n            });\n        };\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulseOpts = options.interactivity.modes.repulse;\n            if (!repulseOpts || mode !== \"repulse\") {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            const repulse = container.repulse;\n            repulse.clicking = true;\n            repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            repulse.particles = [];\n            repulse.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                repulse.clicking = false;\n            }, repulseOpts.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hover = events.onHover, hoverEnabled = hover.enable, hoverMode = hover.mode, click = events.onClick, clickEnabled = click.enable, clickMode = click.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n            this._hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n            this._clickRepulse();\n        }\n        else {\n            divModeExecute(\"repulse\", divs, (selector, div) => this._singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv, hover = events.onHover, click = events.onClick, divRepulse = isDivModeEnabled(\"repulse\", divs);\n        if (!(divRepulse || (hover.enable && mouse.position) || (click.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = hover.mode, clickMode = click.mode;\n        return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source?.repulse);\n        }\n    }\n    reset() {\n    }\n}\n","export class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, getDistance, isInArray, } from \"tsparticles-engine\";\nimport { Slow } from \"./Options/Classes/Slow\";\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"slow\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source?.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slowOptions = options.interactivity.modes.slow;\n        if (!slowOptions || !radius || radius < 0 || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slowOptions.factor, { slow } = particle;\n        if (dist > radius) {\n            return;\n        }\n        slow.inRange = true;\n        slow.factor = proximityFactor / slowFactor;\n    }\n}\n","export const InterlaceOffsets = [0, 4, 2, 1];\nexport const InterlaceSteps = [8, 8, 4, 2];\n","export class ByteStream {\n    constructor(bytes) {\n        this.pos = 0;\n        this.data = new Uint8ClampedArray(bytes);\n    }\n    getString(count) {\n        const slice = this.data.slice(this.pos, this.pos + count);\n        this.pos += slice.length;\n        return slice.reduce((acc, curr) => acc + String.fromCharCode(curr), \"\");\n    }\n    nextByte() {\n        return this.data[this.pos++];\n    }\n    nextTwoBytes() {\n        this.pos += 2;\n        return this.data[this.pos - 2] + (this.data[this.pos - 1] << 8);\n    }\n    readSubBlocks() {\n        let blockString = \"\", size = 0;\n        do {\n            size = this.data[this.pos++];\n            for (let count = size; --count >= 0; blockString += String.fromCharCode(this.data[this.pos++])) {\n            }\n        } while (size !== 0);\n        return blockString;\n    }\n    readSubBlocksBin() {\n        let size = 0, len = 0;\n        for (let offset = 0; (size = this.data[this.pos + offset]) !== 0; offset += size + 1) {\n            len += size;\n        }\n        const blockData = new Uint8Array(len);\n        for (let i = 0; (size = this.data[this.pos++]) !== 0;) {\n            for (let count = size; --count >= 0; blockData[i++] = this.data[this.pos++]) {\n            }\n        }\n        return blockData;\n    }\n    skipSubBlocks() {\n        for (; this.data[this.pos] !== 0; this.pos += this.data[this.pos] + 1) {\n        }\n        this.pos++;\n    }\n}\n","import { InterlaceOffsets, InterlaceSteps } from \"./Constants\";\nimport { ByteStream } from \"./ByteStream\";\nfunction parseColorTable(byteStream, count) {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n        colors.push({\n            r: byteStream.data[byteStream.pos],\n            g: byteStream.data[byteStream.pos + 1],\n            b: byteStream.data[byteStream.pos + 2],\n        });\n        byteStream.pos += 3;\n    }\n    return colors;\n}\nasync function parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {\n    switch (byteStream.nextByte()) {\n        case 249: {\n            const frame = gif.frames[getFrameIndex(false)];\n            byteStream.pos++;\n            const packedByte = byteStream.nextByte();\n            frame.GCreserved = (packedByte & 0xe0) >>> 5;\n            frame.disposalMethod = (packedByte & 0x1c) >>> 2;\n            frame.userInputDelayFlag = (packedByte & 2) === 2;\n            const transparencyFlag = (packedByte & 1) === 1;\n            frame.delayTime = byteStream.nextTwoBytes() * 0xa;\n            const transparencyIndex = byteStream.nextByte();\n            if (transparencyFlag) {\n                getTransparencyIndex(transparencyIndex);\n            }\n            byteStream.pos++;\n            break;\n        }\n        case 255: {\n            byteStream.pos++;\n            const applicationExtension = {\n                identifier: byteStream.getString(8),\n                authenticationCode: byteStream.getString(3),\n                data: byteStream.readSubBlocksBin(),\n            };\n            gif.applicationExtensions.push(applicationExtension);\n            break;\n        }\n        case 254: {\n            gif.comments.push([getFrameIndex(false), byteStream.readSubBlocks()]);\n            break;\n        }\n        case 1: {\n            if (gif.globalColorTable.length === 0) {\n                throw new EvalError(\"plain text extension without global color table\");\n            }\n            byteStream.pos++;\n            gif.frames[getFrameIndex(false)].plainTextData = {\n                left: byteStream.nextTwoBytes(),\n                top: byteStream.nextTwoBytes(),\n                width: byteStream.nextTwoBytes(),\n                height: byteStream.nextTwoBytes(),\n                charSize: {\n                    width: byteStream.nextTwoBytes(),\n                    height: byteStream.nextTwoBytes(),\n                },\n                foregroundColor: byteStream.nextByte(),\n                backgroundColor: byteStream.nextByte(),\n                text: byteStream.readSubBlocks(),\n            };\n            break;\n        }\n        default:\n            byteStream.skipSubBlocks();\n            break;\n    }\n}\nasync function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    const frame = gif.frames[getFrameIndex(true)];\n    frame.left = byteStream.nextTwoBytes();\n    frame.top = byteStream.nextTwoBytes();\n    frame.width = byteStream.nextTwoBytes();\n    frame.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), localColorTableFlag = (packedByte & 0x80) === 0x80, interlacedFlag = (packedByte & 0x40) === 0x40;\n    frame.sortFlag = (packedByte & 0x20) === 0x20;\n    frame.reserved = (packedByte & 0x18) >>> 3;\n    const localColorCount = 1 << ((packedByte & 7) + 1);\n    if (localColorTableFlag) {\n        frame.localColorTable = parseColorTable(byteStream, localColorCount);\n    }\n    const getColor = (index) => {\n        const { r, g, b } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];\n        return { r, g, b, a: index === getTransparencyIndex(null) ? (avgAlpha ? ~~((r + g + b) / 3) : 0) : 255 };\n    };\n    const image = (() => {\n        try {\n            return new ImageData(frame.width, frame.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (image == null) {\n        throw new EvalError(\"GIF frame size is to large\");\n    }\n    const minCodeSize = byteStream.nextByte(), imageData = byteStream.readSubBlocksBin(), clearCode = 1 << minCodeSize;\n    const readBits = (pos, len) => {\n        const bytePos = pos >>> 3, bitPos = pos & 7;\n        return (((imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16)) &\n            (((1 << len) - 1) << bitPos)) >>>\n            bitPos);\n    };\n    if (interlacedFlag) {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pass = 0; pass < 4; pass++) {\n            if (InterlaceOffsets[pass] < frame.height) {\n                for (let pixelPos = 0, lineIndex = 0;;) {\n                    const last = code;\n                    code = readBits(pos, size);\n                    pos += size + 1;\n                    if (code === clearCode) {\n                        size = minCodeSize + 1;\n                        dic.length = clearCode + 2;\n                        for (let i = 0; i < dic.length; i++) {\n                            dic[i] = i < clearCode ? [i] : [];\n                        }\n                    }\n                    else {\n                        if (code >= dic.length) {\n                            dic.push(dic[last].concat(dic[last][0]));\n                        }\n                        else if (last !== clearCode) {\n                            dic.push(dic[last].concat(dic[code][0]));\n                        }\n                        for (let i = 0; i < dic[code].length; i++) {\n                            const { r, g, b, a } = getColor(dic[code][i]);\n                            image.data.set([r, g, b, a], InterlaceOffsets[pass] * frame.width +\n                                InterlaceSteps[pass] * lineIndex +\n                                (pixelPos % (frame.width * 4)));\n                            pixelPos += 4;\n                        }\n                        if (dic.length === 1 << size && size < 0xc) {\n                            size++;\n                        }\n                    }\n                    if (pixelPos === frame.width * 4 * (lineIndex + 1)) {\n                        lineIndex++;\n                        if (InterlaceOffsets[pass] + InterlaceSteps[pass] * lineIndex >= frame.height) {\n                            break;\n                        }\n                    }\n                }\n            }\n            progressCallback?.(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n    }\n    else {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pixelPos = -4;;) {\n            const last = code;\n            code = readBits(pos, size);\n            pos += size;\n            if (code === clearCode) {\n                size = minCodeSize + 1;\n                dic.length = clearCode + 2;\n                for (let i = 0; i < dic.length; i++) {\n                    dic[i] = i < clearCode ? [i] : [];\n                }\n            }\n            else {\n                if (code === clearCode + 1) {\n                    break;\n                }\n                if (code >= dic.length) {\n                    dic.push(dic[last].concat(dic[last][0]));\n                }\n                else if (last !== clearCode) {\n                    dic.push(dic[last].concat(dic[code][0]));\n                }\n                for (let i = 0; i < dic[code].length; i++) {\n                    const { r, g, b, a } = getColor(dic[code][i]);\n                    image.data.set([r, g, b, a], (pixelPos += 4));\n                }\n                if (dic.length >= 1 << size && size < 0xc) {\n                    size++;\n                }\n            }\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n        progressCallback?.((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n    }\n}\nasync function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    switch (byteStream.nextByte()) {\n        case 59:\n            return true;\n        case 44:\n            await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);\n            break;\n        case 33:\n            await parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);\n            break;\n        default:\n            throw new EvalError(\"undefined block found\");\n    }\n    return false;\n}\nexport function getGIFLoopAmount(gif) {\n    for (const extension of gif.applicationExtensions) {\n        if (extension.identifier + extension.authenticationCode !== \"NETSCAPE2.0\") {\n            continue;\n        }\n        return extension.data[1] + (extension.data[2] << 8);\n    }\n    return NaN;\n}\nexport async function decodeGIF(gifURL, progressCallback, avgAlpha) {\n    if (!avgAlpha)\n        avgAlpha = false;\n    const res = await fetch(gifURL);\n    if (!res.ok && res.status === 404) {\n        throw new EvalError(\"file not found\");\n    }\n    const buffer = await res.arrayBuffer();\n    const gif = {\n        width: 0,\n        height: 0,\n        totalTime: 0,\n        colorRes: 0,\n        pixelAspectRatio: 0,\n        frames: [],\n        sortFlag: false,\n        globalColorTable: [],\n        backgroundImage: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n        comments: [],\n        applicationExtensions: [],\n    }, byteStream = new ByteStream(new Uint8ClampedArray(buffer));\n    if (byteStream.getString(6) !== \"GIF89a\") {\n        throw new Error(\"not a supported GIF file\");\n    }\n    gif.width = byteStream.nextTwoBytes();\n    gif.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), globalColorTableFlag = (packedByte & 0x80) === 0x80;\n    gif.colorRes = (packedByte & 0x70) >>> 4;\n    gif.sortFlag = (packedByte & 8) === 8;\n    const globalColorCount = 1 << ((packedByte & 7) + 1), backgroundColorIndex = byteStream.nextByte();\n    gif.pixelAspectRatio = byteStream.nextByte();\n    if (gif.pixelAspectRatio !== 0) {\n        gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;\n    }\n    if (globalColorTableFlag) {\n        gif.globalColorTable = parseColorTable(byteStream, globalColorCount);\n    }\n    const backgroundImage = (() => {\n        try {\n            return new ImageData(gif.width, gif.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (backgroundImage == null) {\n        throw new Error(\"GIF frame size is to large\");\n    }\n    const { r, g, b } = gif.globalColorTable[backgroundColorIndex];\n    backgroundImage.data.set(globalColorTableFlag ? [r, g, b, 255] : [0, 0, 0, 0]);\n    for (let i = 4; i < backgroundImage.data.length; i *= 2) {\n        backgroundImage.data.copyWithin(i, 0, i);\n    }\n    gif.backgroundImage = backgroundImage;\n    let frameIndex = -1, incrementFrameIndex = true, transparencyIndex = -1;\n    const getframeIndex = (increment) => {\n        if (increment) {\n            incrementFrameIndex = true;\n        }\n        return frameIndex;\n    };\n    const getTransparencyIndex = (newValue) => {\n        if (newValue != null) {\n            transparencyIndex = newValue;\n        }\n        return transparencyIndex;\n    };\n    try {\n        do {\n            if (incrementFrameIndex) {\n                gif.frames.push({\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                    disposalMethod: 0,\n                    image: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n                    plainTextData: null,\n                    userInputDelayFlag: false,\n                    delayTime: 0,\n                    sortFlag: false,\n                    localColorTable: [],\n                    reserved: 0,\n                    GCreserved: 0,\n                });\n                frameIndex++;\n                transparencyIndex = -1;\n                incrementFrameIndex = false;\n            }\n        } while (!(await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback)));\n        gif.frames.length--;\n        for (const frame of gif.frames) {\n            if (frame.userInputDelayFlag && frame.delayTime === 0) {\n                gif.totalTime = Infinity;\n                break;\n            }\n            gif.totalTime += frame.delayTime;\n        }\n        return gif;\n    }\n    catch (error) {\n        if (error instanceof EvalError) {\n            throw new Error(`error while parsing frame ${frameIndex} \"${error.message}\"`);\n        }\n        throw error;\n    }\n}\n","import { errorPrefix, getLogger, getStyleFromHsl } from \"tsparticles-engine\";\nimport { decodeGIF, getGIFLoopAmount } from \"./GifUtils/Utils\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? 0;\n        if (image.gifLoopCount === 0) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        getLogger().error(`${errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? 1), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor ?? imageData.replace_color,\n        source: imageData.src,\n    };\n    return new Promise((resolve) => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        img.addEventListener(\"error\", async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        });\n        img.src = url;\n    });\n}\n","import { errorPrefix } from \"tsparticles-engine\";\nimport { replaceImageColor } from \"./Utils\";\nexport class ImageDrawer {\n    constructor(engine) {\n        this.loadImageShape = async (imageShape) => {\n            if (!this._engine.loadImage) {\n                throw new Error(`${errorPrefix} image shape not initialized`);\n            }\n            await this._engine.loadImage({\n                gif: imageShape.gif,\n                name: imageShape.name,\n                replaceColor: imageShape.replaceColor ?? imageShape.replace_color ?? false,\n                src: imageShape.src,\n            });\n        };\n        this._engine = engine;\n    }\n    addImage(image) {\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        this._engine.images.push(image);\n    }\n    draw(context, particle, radius, opacity, delta) {\n        const image = particle.image, element = image?.element;\n        if (!image) {\n            return;\n        }\n        context.globalAlpha = opacity;\n        if (image.gif && image.gifData) {\n            const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height), offscreenContext = offscreenCanvas.getContext(\"2d\");\n            if (!offscreenContext) {\n                throw new Error(\"could not create offscreen canvas context\");\n            }\n            offscreenContext.imageSmoothingQuality = \"low\";\n            offscreenContext.imageSmoothingEnabled = false;\n            offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n            if (particle.gifLoopCount === undefined) {\n                particle.gifLoopCount = image.gifLoopCount ?? 0;\n            }\n            let frameIndex = particle.gifFrame ?? 0;\n            const pos = { x: -image.gifData.width * 0.5, y: -image.gifData.height * 0.5 }, frame = image.gifData.frames[frameIndex];\n            if (particle.gifTime === undefined) {\n                particle.gifTime = 0;\n            }\n            if (!frame.bitmap) {\n                return;\n            }\n            context.scale(radius / image.gifData.width, radius / image.gifData.height);\n            switch (frame.disposalMethod) {\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 0:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    break;\n                case 1:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    break;\n                case 2:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    if (image.gifData.globalColorTable.length === 0) {\n                        offscreenContext.putImageData(image.gifData.frames[0].image, pos.x + frame.left, pos.y + frame.top);\n                    }\n                    else {\n                        offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);\n                    }\n                    break;\n                case 3:\n                    {\n                        const previousImageData = offscreenContext.getImageData(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                        context.drawImage(offscreenCanvas, pos.x, pos.y);\n                        offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.putImageData(previousImageData, 0, 0);\n                    }\n                    break;\n            }\n            particle.gifTime += delta.value;\n            if (particle.gifTime > frame.delayTime) {\n                particle.gifTime -= frame.delayTime;\n                if (++frameIndex >= image.gifData.frames.length) {\n                    if (--particle.gifLoopCount <= 0) {\n                        return;\n                    }\n                    frameIndex = 0;\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                }\n                particle.gifFrame = frameIndex;\n            }\n            context.scale(image.gifData.width / radius, image.gifData.height / radius);\n        }\n        else if (element) {\n            const ratio = image.ratio, pos = {\n                x: -radius,\n                y: -radius,\n            };\n            context.drawImage(element, pos.x, pos.y, radius * 2, (radius * 2) / ratio);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (!options.preload || !this._engine.loadImage) {\n            return;\n        }\n        for (const imageData of options.preload) {\n            await this._engine.loadImage(imageData);\n        }\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const imageData = particle.shapeData, image = this._engine.images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            this.loadImageShape(imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const images = this._engine.images, imageData = particle.shapeData, color = particle.getFillColor(), image = images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        const replaceColor = imageData.replaceColor ?? imageData.replace_color ?? image.replaceColor;\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        (async () => {\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    gif: image.gif,\n                    gifData: image.gifData,\n                    gifLoopCount: image.gifLoopCount,\n                    loaded: true,\n                    ratio: imageData.width && imageData.height ? imageData.width / imageData.height : image.ratio ?? 1,\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = imageData.fill ?? particle.fill, close = imageData.close ?? particle.close, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.fill = imageShape.fill;\n            particle.close = imageShape.close;\n        })();\n    }\n}\n","export class Preload {\n    constructor() {\n        this.src = \"\";\n        this.gif = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.gif !== undefined) {\n            this.gif = data.gif;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.replaceColor !== undefined) {\n            this.replaceColor = data.replaceColor;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { Preload } from \"./Options/Classes/Preload\";\nexport class ImagePreloaderPlugin {\n    constructor(engine) {\n        this.id = \"imagePreloader\";\n        this._engine = engine;\n    }\n    getPlugin() {\n        return {};\n    }\n    loadOptions(options, source) {\n        if (!source || !source.preload) {\n            return;\n        }\n        if (!options.preload) {\n            options.preload = [];\n        }\n        const preloadOptions = options.preload;\n        for (const item of source.preload) {\n            const existing = preloadOptions.find((t) => t.name === item.name || t.src === item.src);\n            if (existing) {\n                existing.load(item);\n            }\n            else {\n                const preload = new Preload();\n                preload.load(item);\n                preloadOptions.push(preload);\n            }\n        }\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { downloadSvgImage, loadGifImage, loadImage } from \"./Utils\";\nimport { ImageDrawer } from \"./ImageDrawer\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader\";\nimport { errorPrefix } from \"tsparticles-engine\";\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - 3),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            const imageFunc = data.gif ? loadGifImage : data.replaceColor ? downloadSvgImage : loadImage;\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nexport async function loadImageShape(engine, refresh = true) {\n    addLoadImageToEngine(engine);\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape([\"image\", \"images\"], new ImageDrawer(engine), refresh);\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.0001;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { LifeDelay } from \"./LifeDelay\";\nimport { LifeDuration } from \"./LifeDuration\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n","import { getRandom, getRangeValue, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nimport { Life } from \"./Options/Classes/Life\";\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            delayTime: 0,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            time: 0,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= 0) {\n            particle.life.duration = -1;\n        }\n        if (particle.life.count <= 0) {\n            particle.life.count = -1;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > 0;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source?.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        const life = particle.life;\n        let justSpawned = false;\n        if (particle.spawning) {\n            life.delayTime += delta.value;\n            if (life.delayTime >= particle.life.delay) {\n                justSpawned = true;\n                particle.spawning = false;\n                life.delayTime = 0;\n                life.time = 0;\n            }\n            else {\n                return;\n            }\n        }\n        if (life.duration === -1) {\n            return;\n        }\n        if (particle.spawning) {\n            return;\n        }\n        if (justSpawned) {\n            life.time = 0;\n        }\n        else {\n            life.time += delta.value;\n        }\n        if (life.time < life.duration) {\n            return;\n        }\n        life.time = 0;\n        if (particle.life.count > 0) {\n            particle.life.count--;\n        }\n        if (particle.life.count === 0) {\n            particle.destroy();\n            return;\n        }\n        const canvasSize = this.container.canvas.size, widthRange = setRangeValue(0, canvasSize.width), heightRange = setRangeValue(0, canvasSize.width);\n        particle.position.x = randomInRange(widthRange);\n        particle.position.y = randomInRange(heightRange);\n        particle.spawning = true;\n        life.delayTime = 0;\n        life.time = 0;\n        particle.reset();\n        const lifeOptions = particle.options.life;\n        if (lifeOptions) {\n            life.delay = getRangeValue(lifeOptions.delay.value) * 1000;\n            life.duration = getRangeValue(lifeOptions.duration.value) * 1000;\n        }\n    }\n}\n","export class LineDrawer {\n    draw(context, particle, radius) {\n        const shapeData = particle.shapeData;\n        context.moveTo(-radius / 2, 0);\n        context.lineTo(radius / 2, 0);\n        context.lineCap = shapeData?.cap ?? \"butt\";\n    }\n    getSidesCount() {\n        return 1;\n    }\n}\n","import { isSsr } from \"tsparticles-engine\";\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions, parallaxOptions = options.interactivity.events.onHover.parallax;\n        if (isSsr() || !parallaxOptions.enable) {\n            return;\n        }\n        const parallaxForce = parallaxOptions.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasSize = container.canvas.size, canvasCenter = {\n            x: canvasSize.width / 2,\n            y: canvasSize.height / 2,\n        }, parallaxSmooth = parallaxOptions.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        }, { offset } = particle;\n        offset.x += (centerDistance.x - offset.x) / parallaxSmooth;\n        offset.y += (centerDistance.y - offset.y) / parallaxSmooth;\n    }\n}\n","export class ParticlesInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"particles\";\n    }\n}\n","import { ParticlesInteractorBase, getDistances, } from \"tsparticles-engine\";\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1) {\n        const container = this.container, distance = p1.retina.attractDistance ?? container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / 10, 0, r2);\n    p1.size.value += factor / 2;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n","import { circleBounce, circleBounceDataFromParticle, getRangeValue } from \"tsparticles-engine\";\nconst fixBounceSpeed = (p) => {\n    if (p.collisionMaxSpeed === undefined) {\n        p.collisionMaxSpeed = getRangeValue(p.options.collisions.maxSpeed);\n    }\n    if (p.velocity.length > p.collisionMaxSpeed) {\n        p.velocity.length = p.collisionMaxSpeed;\n    }\n};\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n    fixBounceSpeed(p1);\n    fixBounceSpeed(p2);\n}\n","import { absorb } from \"./Absorb\";\nimport { bounce } from \"./Bounce\";\nimport { destroy } from \"./Destroy\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case \"absorb\": {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case \"bounce\": {\n            bounce(p1, p2);\n            break;\n        }\n        case \"destroy\": {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { bounce } from \"./Bounce\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p2 : p1;\n        deleteP.destroy();\n    }\n}\n","import { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1, delta) {\n        if (p1.destroyed || p1.spawning) {\n            return;\n        }\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n","import { Circle, Rectangle } from \"tsparticles-engine\";\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = { ...canvasSize };\n    }\n    contains(point) {\n        const { width, height } = this.canvasSize;\n        const { x, y } = point;\n        return (super.contains(point) ||\n            super.contains({ x: x - width, y }) ||\n            super.contains({ x: x - width, y: y - height }) ||\n            super.contains({ x, y: y - height }));\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nimport { LinksShadow } from \"./LinksShadow\";\nimport { LinksTriangle } from \"./LinksTriangle\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { Circle, ParticlesInteractorBase, getDistances, getLinkRandomColor, } from \"tsparticles-engine\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Links } from \"./Options/Classes/Links\";\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    const { dx, dy, distance } = getDistances(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const absDiffs = {\n        x: Math.abs(dx),\n        y: Math.abs(dy),\n    }, warpDistances = {\n        x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),\n        y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y),\n    };\n    return Math.sqrt(warpDistances.x ** 2 + warpDistances.y ** 2);\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n        this._setColor = (p1) => {\n            if (!p1.options.links) {\n                return;\n            }\n            const container = this.linkContainer, linksOptions = p1.options.links;\n            let linkColor = linksOptions.id === undefined\n                ? container.particles.linksColor\n                : container.particles.linksColors.get(linksOptions.id);\n            if (linkColor) {\n                return;\n            }\n            const optColor = linksOptions.color;\n            linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        };\n        this.linkContainer = container;\n    }\n    clear() {\n    }\n    init() {\n        this.linkContainer.particles.linksColor = undefined;\n        this.linkContainer.particles.linksColors = new Map();\n    }\n    async interact(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = p1.retina.linksDistance ?? 0, warp = linkOpt1.warp, range = warp\n            ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Circle(pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2?.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.some((t) => t.destination === p2) ||\n                p2.links.some((t) => t.destination === p1)) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                continue;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            this._setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        return !!particle.options.links?.enable;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load(source?.links ?? source?.lineLinked ?? source?.line_linked);\n        }\n    }\n    reset() {\n    }\n}\n","import { drawLine, drawTriangle, getDistance, getDistances, getRandom, getStyleFromRgb, rangeColorToRgb, } from \"tsparticles-engine\";\nexport function drawLinkLine(params) {\n    let drawn = false;\n    const { begin, end, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (links.warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    const { shadow } = links;\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(params) {\n    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexport function getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nexport function setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map((t) => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\n","import { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb, } from \"tsparticles-engine\";\nimport { drawLinkLine, drawLinkTriangle, setLinkFrequency } from \"./Utils\";\nexport class LinkInstance {\n    constructor(container) {\n        this.container = container;\n        this._drawLinkLine = (p1, link) => {\n            const p1LinksOptions = p1.options.links;\n            if (!p1LinksOptions?.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            let opacity = link.opacity;\n            container.canvas.draw((ctx) => {\n                let colorLine;\n                const twinkle = p1.options.twinkle?.lines;\n                if (twinkle?.enable) {\n                    const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(twinkle.color), twinkling = getRandom() < twinkleFreq;\n                    if (twinkling && twinkleRgb) {\n                        colorLine = twinkleRgb;\n                        opacity = getRangeValue(twinkle.opacity);\n                    }\n                }\n                if (!colorLine) {\n                    const linkColor = p1LinksOptions.id !== undefined\n                        ? container.particles.linksColors.get(p1LinksOptions.id)\n                        : container.particles.linksColor;\n                    colorLine = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorLine) {\n                    return;\n                }\n                const width = p1.retina.linksWidth ?? 0, maxDistance = p1.retina.linksDistance ?? 0, { backgroundMask } = options;\n                drawLinkLine({\n                    context: ctx,\n                    width,\n                    begin: pos1,\n                    end: pos2,\n                    maxDistance,\n                    canvasSize: container.canvas.size,\n                    links: p1LinksOptions,\n                    backgroundMask: backgroundMask,\n                    colorLine,\n                    opacity,\n                });\n            });\n        };\n        this._drawLinkTriangle = (p1, link1, link2) => {\n            const linksOptions = p1.options.links;\n            if (!linksOptions?.enable) {\n                return;\n            }\n            const triangleOptions = linksOptions.triangles;\n            if (!triangleOptions.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, opacityTriangle = triangleOptions.opacity ?? (link1.opacity + link2.opacity) / 2;\n            if (opacityTriangle <= 0) {\n                return;\n            }\n            container.canvas.draw((ctx) => {\n                const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = p1.retina.linksDistance ?? 0;\n                if (getDistance(pos1, pos2) > linksDistance ||\n                    getDistance(pos3, pos2) > linksDistance ||\n                    getDistance(pos3, pos1) > linksDistance) {\n                    return;\n                }\n                let colorTriangle = rangeColorToRgb(triangleOptions.color);\n                if (!colorTriangle) {\n                    const linkColor = linksOptions.id !== undefined\n                        ? container.particles.linksColors.get(linksOptions.id)\n                        : container.particles.linksColor;\n                    colorTriangle = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorTriangle) {\n                    return;\n                }\n                drawLinkTriangle({\n                    context: ctx,\n                    pos1,\n                    pos2,\n                    pos3,\n                    backgroundMask: options.backgroundMask,\n                    colorTriangle,\n                    opacityTriangle,\n                });\n            });\n        };\n        this._drawTriangles = (options, p1, link, p1Links) => {\n            const p2 = link.destination;\n            if (!(options.links?.triangles.enable && p2.options.links?.triangles.enable)) {\n                return;\n            }\n            const vertices = p2.links?.filter((t) => {\n                const linkFreq = this._getLinkFrequency(p2, t.destination);\n                return (p2.options.links &&\n                    linkFreq <= p2.options.links.frequency &&\n                    p1Links.findIndex((l) => l.destination === t.destination) >= 0);\n            });\n            if (!vertices?.length) {\n                return;\n            }\n            for (const vertex of vertices) {\n                const p3 = vertex.destination, triangleFreq = this._getTriangleFrequency(p1, p2, p3);\n                if (triangleFreq > options.links.triangles.frequency) {\n                    continue;\n                }\n                this._drawLinkTriangle(p1, link, vertex);\n            }\n        };\n        this._getLinkFrequency = (p1, p2) => {\n            return setLinkFrequency([p1, p2], this._freqs.links);\n        };\n        this._getTriangleFrequency = (p1, p2, p3) => {\n            return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n        };\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        const { links, options } = particle;\n        if (!links || links.length <= 0) {\n            return;\n        }\n        const p1Links = links.filter((l) => options.links && this._getLinkFrequency(particle, l.destination) <= options.links.frequency);\n        for (const link of p1Links) {\n            this._drawTriangles(options, particle, link, p1Links);\n            if (link.opacity > 0 && (particle.retina.linksWidth ?? 0) > 0) {\n                this._drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this.container.retina.pixelRatio, { retina } = particle, { distance, width } = particle.options.links;\n        retina.linksDistance = distance * ratio;\n        retina.linksWidth = width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n}\n","import { LinkInstance } from \"./LinkInstance\";\nclass LinksPlugin {\n    constructor() {\n        this.id = \"links\";\n    }\n    getPlugin(container) {\n        return new LinkInstance(container);\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\nexport async function loadLinksPlugin(engine, refresh = true) {\n    const plugin = new LinksPlugin();\n    await engine.addPlugin(plugin, refresh);\n}\n","import { loadLinksInteraction } from \"./interaction\";\nimport { loadLinksPlugin } from \"./plugin\";\nexport async function loadParticlesLinksInteraction(engine, refresh = true) {\n    await loadLinksInteraction(engine, refresh);\n    await loadLinksPlugin(engine, refresh);\n}\nexport * from \"./Options/Classes/Links\";\nexport * from \"./Options/Classes/LinksShadow\";\nexport * from \"./Options/Classes/LinksTriangle\";\nexport * from \"./Options/Interfaces/ILinks\";\nexport * from \"./Options/Interfaces/ILinksShadow\";\nexport * from \"./Options/Interfaces/ILinksTriangle\";\n","import { Linker } from \"./Linker\";\nexport async function loadLinksInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesLinks\", (container) => new Linker(container), refresh);\n}\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class PolygonDrawerBase {\n    draw(context, particle, radius) {\n        const start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius), sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides, interiorAngle = Math.PI - (Math.PI * interiorAngleDegrees) / 180;\n        if (!context) {\n            return;\n        }\n        context.beginPath();\n        context.translate(start.x, start.y);\n        context.moveTo(0, 0);\n        for (let i = 0; i < sideCount; i++) {\n            context.lineTo(side.length, 0);\n            context.translate(side.length, 0);\n            context.rotate(interiorAngle);\n        }\n    }\n    getSidesCount(particle) {\n        const polygon = particle.shapeData;\n        return Math.round(getRangeValue(polygon?.sides ?? polygon?.nb_sides ?? 5));\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class PolygonDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / 3.5),\n            y: -radius / (2.66 / 3.5),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * 2.66) / (sides / 3),\n        };\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class TriangleDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / 1.66,\n        };\n    }\n    getSidesCount() {\n        return 3;\n    }\n    getSidesData(particle, radius) {\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: radius * 2,\n        };\n    }\n}\n","import { PolygonDrawer } from \"./PolygonDrawer\";\nimport { TriangleDrawer } from \"./TriangleDrawer\";\nexport async function loadGenericPolygonShape(engine, refresh = true) {\n    await engine.addShape(\"polygon\", new PolygonDrawer(), refresh);\n}\nexport async function loadTriangleShape(engine, refresh = true) {\n    await engine.addShape(\"triangle\", new TriangleDrawer(), refresh);\n}\nexport async function loadPolygonShape(engine, refresh = true) {\n    await loadGenericPolygonShape(engine, refresh);\n    await loadTriangleShape(engine, refresh);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom, } from \"tsparticles-engine\";\nimport { RotateAnimation } from \"./RotateAnimation\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = \"clockwise\";\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n","import { getRandom, getRangeValue, } from \"tsparticles-engine\";\nimport { Rotate } from \"./Options/Classes/Rotate\";\nfunction updateRotate(particle, delta) {\n    const rotate = particle.rotate, rotateOptions = particle.options.rotate;\n    if (!rotate || !rotateOptions) {\n        return;\n    }\n    const rotateAnimation = rotateOptions.animation, speed = (rotate.velocity ?? 0) * delta.factor, max = 2 * Math.PI, decay = rotate.decay ?? 1;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case \"increasing\":\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n    if (rotate.velocity && decay !== 1) {\n        rotate.velocity *= decay;\n    }\n}\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: (getRangeValue(rotateOptions.value) * Math.PI) / 180,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (rotateDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.rotate.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.rotate.status = \"increasing\";\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = 1 - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && rotate.animation.enable && !rotate.path;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source?.rotate);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRotate(particle, delta);\n        particle.rotation = particle.rotate?.value ?? 0;\n    }\n}\n","const fixFactor = Math.sqrt(2);\nexport class SquareDrawer {\n    draw(context, particle, radius) {\n        const fixedRadius = radius / fixFactor, fixedDiameter = fixedRadius * 2;\n        context.rect(-fixedRadius, -fixedRadius, fixedDiameter, fixedDiameter);\n    }\n    getSidesCount() {\n        return 4;\n    }\n}\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class StarDrawer {\n    draw(context, particle, radius) {\n        const sides = particle.sides, inset = particle.starInset ?? 2;\n        context.moveTo(0, 0 - radius);\n        for (let i = 0; i < sides; i++) {\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius * inset);\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius);\n        }\n    }\n    getSidesCount(particle) {\n        const star = particle.shapeData;\n        return Math.round(getRangeValue(star?.sides ?? star?.nb_sides ?? 5));\n    }\n    particleInit(container, particle) {\n        const star = particle.shapeData, inset = getRangeValue(star?.inset ?? 2);\n        particle.starInset = inset;\n    }\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateStrokeColor(particle, delta) {\n    if (!particle.strokeColor || !particle.strokeAnimation) {\n        return;\n    }\n    const { h, s, l } = particle.strokeColor, { h: hAnimation, s: sAnimation, l: lAnimation } = particle.strokeAnimation;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateStrokeColor } from \"./Utils\";\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, options = particle.options;\n        const stroke = itemFromSingleOrMultiple(options.stroke, particle.id, options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue(stroke.opacity ?? 1);\n        particle.strokeAnimation = stroke.color?.animation;\n        const strokeHslColor = rangeColorToHsl(stroke.color) ?? particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const color = particle.strokeAnimation, { strokeColor } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((strokeColor?.h.value !== undefined && strokeColor.h.enable) ||\n                (strokeColor?.s.value !== undefined && strokeColor.s.enable) ||\n                (strokeColor?.l.value !== undefined && strokeColor.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateStrokeColor(particle, delta);\n    }\n}\n","import { executeOnSingleOrMultiple, isInArray, itemFromSingleOrMultiple, loadFont, } from \"tsparticles-engine\";\nexport const validTypes = [\"text\", \"character\", \"char\"];\nexport class TextDrawer {\n    draw(context, particle, radius, opacity) {\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        if (particle.text === undefined) {\n            particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n        }\n        const text = particle.text, style = character.style ?? \"\", weight = character.weight ?? \"400\", size = Math.round(radius) * 2, font = character.font ?? \"Verdana\", fill = particle.fill, offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        context.globalAlpha = opacity;\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (validTypes.find((t) => isInArray(t, options.particles.shape.type))) {\n            const shapeOptions = validTypes\n                .map((t) => options.particles.shape.options[t])\n                .find((t) => !!t), promises = [];\n            executeOnSingleOrMultiple(shapeOptions, (shape) => {\n                promises.push(loadFont(shape.font, shape.weight));\n            });\n            await Promise.all(promises);\n        }\n    }\n    particleInit(container, particle) {\n        if (!particle.shape || !validTypes.includes(particle.shape)) {\n            return;\n        }\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n    }\n}\n","import { initPjs } from \"tsparticles-particles.js\";\nimport { loadBasic } from \"tsparticles-basic\";\nimport { loadEasingQuadPlugin } from \"tsparticles-plugin-easing-quad\";\nimport { loadExternalAttractInteraction } from \"tsparticles-interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"tsparticles-interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"tsparticles-interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"tsparticles-interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"tsparticles-interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"tsparticles-interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"tsparticles-interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"tsparticles-interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"tsparticles-interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"tsparticles-interaction-external-slow\";\nimport { loadImageShape } from \"tsparticles-shape-image\";\nimport { loadLifeUpdater } from \"tsparticles-updater-life\";\nimport { loadLineShape } from \"tsparticles-shape-line\";\nimport { loadParallaxMover } from \"tsparticles-move-parallax\";\nimport { loadParticlesAttractInteraction } from \"tsparticles-interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"tsparticles-interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"tsparticles-interaction-particles-links\";\nimport { loadPolygonShape } from \"tsparticles-shape-polygon\";\nimport { loadRotateUpdater } from \"tsparticles-updater-rotate\";\nimport { loadSquareShape } from \"tsparticles-shape-square\";\nimport { loadStarShape } from \"tsparticles-shape-star\";\nimport { loadStrokeColorUpdater } from \"tsparticles-updater-stroke-color\";\nimport { loadTextShape } from \"tsparticles-shape-text\";\nexport async function loadSlim(engine, refresh = true) {\n    initPjs(engine);\n    await loadParallaxMover(engine, false);\n    await loadExternalAttractInteraction(engine, false);\n    await loadExternalBounceInteraction(engine, false);\n    await loadExternalBubbleInteraction(engine, false);\n    await loadExternalConnectInteraction(engine, false);\n    await loadExternalGrabInteraction(engine, false);\n    await loadExternalPauseInteraction(engine, false);\n    await loadExternalPushInteraction(engine, false);\n    await loadExternalRemoveInteraction(engine, false);\n    await loadExternalRepulseInteraction(engine, false);\n    await loadExternalSlowInteraction(engine, false);\n    await loadParticlesAttractInteraction(engine, false);\n    await loadParticlesCollisionsInteraction(engine, false);\n    await loadParticlesLinksInteraction(engine, false);\n    await loadEasingQuadPlugin();\n    await loadImageShape(engine, false);\n    await loadLineShape(engine, false);\n    await loadPolygonShape(engine, false);\n    await loadSquareShape(engine, false);\n    await loadStarShape(engine, false);\n    await loadTextShape(engine, false);\n    await loadLifeUpdater(engine, false);\n    await loadRotateUpdater(engine, false);\n    await loadStrokeColorUpdater(engine, false);\n    await loadBasic(engine, refresh);\n}\n","import { ParallaxMover } from \"./ParallaxMover\";\nexport async function loadParallaxMover(engine, refresh = true) {\n    await engine.addMover(\"parallax\", () => new ParallaxMover(), refresh);\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadExternalAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalAttract\", (container) => new Attractor(engine, container), refresh);\n}\nexport * from \"./Options/Classes/Attract\";\nexport * from \"./Options/Interfaces/IAttract\";\n","import { Bouncer } from \"./Bouncer\";\nexport async function loadExternalBounceInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBounce\", (container) => new Bouncer(container), refresh);\n}\nexport * from \"./Options/Classes/Bounce\";\nexport * from \"./Options/Interfaces/IBounce\";\n","import { Bubbler } from \"./Bubbler\";\nexport async function loadExternalBubbleInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBubble\", (container) => new Bubbler(container), refresh);\n}\nexport * from \"./Options/Classes/BubbleBase\";\nexport * from \"./Options/Classes/BubbleDiv\";\nexport * from \"./Options/Classes/Bubble\";\nexport * from \"./Options/Interfaces/IBubbleBase\";\nexport * from \"./Options/Interfaces/IBubbleDiv\";\nexport * from \"./Options/Interfaces/IBubble\";\n","import { Connector } from \"./Connector\";\nexport async function loadExternalConnectInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalConnect\", (container) => new Connector(container), refresh);\n}\nexport * from \"./Options/Classes/Connect\";\nexport * from \"./Options/Classes/ConnectLinks\";\nexport * from \"./Options/Interfaces/IConnect\";\nexport * from \"./Options/Interfaces/IConnectLinks\";\n","import { Grabber } from \"./Grabber\";\nexport async function loadExternalGrabInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalGrab\", (container) => new Grabber(container), refresh);\n}\nexport * from \"./Options/Classes/Grab\";\nexport * from \"./Options/Classes/GrabLinks\";\nexport * from \"./Options/Interfaces/IGrab\";\nexport * from \"./Options/Interfaces/IGrabLinks\";\n","import { Pauser } from \"./Pauser\";\nexport async function loadExternalPauseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPause\", (container) => new Pauser(container), refresh);\n}\n","import { Pusher } from \"./Pusher\";\nexport async function loadExternalPushInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPush\", (container) => new Pusher(container), refresh);\n}\nexport * from \"./Options/Classes/Push\";\nexport * from \"./Options/Interfaces/IPush\";\n","import { Remover } from \"./Remover\";\nexport async function loadExternalRemoveInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRemove\", (container) => new Remover(container), refresh);\n}\nexport * from \"./Options/Classes/Remove\";\nexport * from \"./Options/Interfaces/IRemove\";\n","import { Repulser } from \"./Repulser\";\nexport async function loadExternalRepulseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRepulse\", (container) => new Repulser(engine, container), refresh);\n}\nexport * from \"./Options/Classes/RepulseBase\";\nexport * from \"./Options/Classes/RepulseDiv\";\nexport * from \"./Options/Classes/Repulse\";\nexport * from \"./Options/Interfaces/IRepulseBase\";\nexport * from \"./Options/Interfaces/IRepulseDiv\";\nexport * from \"./Options/Interfaces/IRepulse\";\n","import { Slower } from \"./Slower\";\nexport async function loadExternalSlowInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalSlow\", (container) => new Slower(container), refresh);\n}\nexport * from \"./Options/Classes/Slow\";\nexport * from \"./Options/Interfaces/ISlow\";\n","import { Attractor } from \"./Attractor\";\nexport async function loadParticlesAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesAttract\", (container) => new Attractor(container), refresh);\n}\n","import { Collider } from \"./Collider\";\nexport async function loadParticlesCollisionsInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesCollisions\", (container) => new Collider(container), refresh);\n}\n","import { addEasing } from \"tsparticles-engine\";\nexport async function loadEasingQuadPlugin() {\n    addEasing(\"ease-in-quad\", (value) => value ** 2);\n    addEasing(\"ease-out-quad\", (value) => 1 - (1 - value) ** 2);\n    addEasing(\"ease-in-out-quad\", (value) => (value < 0.5 ? 2 * value ** 2 : 1 - (-2 * value + 2) ** 2 / 2));\n}\n","import { LineDrawer } from \"./LineDrawer\";\nexport async function loadLineShape(engine, refresh = true) {\n    await engine.addShape(\"line\", new LineDrawer(), refresh);\n}\n","import { SquareDrawer } from \"./SquareDrawer\";\nexport async function loadSquareShape(engine, refresh = true) {\n    await engine.addShape([\"edge\", \"square\"], new SquareDrawer(), refresh);\n}\n","import { StarDrawer } from \"./StarDrawer\";\nexport async function loadStarShape(engine, refresh = true) {\n    await engine.addShape(\"star\", new StarDrawer(), refresh);\n}\n","import { TextDrawer, validTypes } from \"./TextDrawer\";\nexport async function loadTextShape(engine, refresh = true) {\n    await engine.addShape(validTypes, new TextDrawer(), refresh);\n}\n","import { LifeUpdater } from \"./LifeUpdater\";\nexport async function loadLifeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"life\", (container) => new LifeUpdater(container), refresh);\n}\n","import { RotateUpdater } from \"./RotateUpdater\";\nexport async function loadRotateUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"rotate\", (container) => new RotateUpdater(container), refresh);\n}\n","import { StrokeColorUpdater } from \"./StrokeColorUpdater\";\nexport async function loadStrokeColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"strokeColor\", (container) => new StrokeColorUpdater(container), refresh);\n}\n","export class Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\n","var _excluded = [\"color\", \"size\", \"title\", \"className\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (-1 !== e.indexOf(n)) continue; t[n] = r[n]; } return t; }\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ArrowRightCircle = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? '1em' : _ref$size,\n    _ref$title = _ref.title,\n    title = _ref$title === void 0 ? null : _ref$title,\n    _ref$className = _ref.className,\n    className = _ref$className === void 0 ? '' : _ref$className,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color,\n    className: ['bi', 'bi-arrow-right-circle', className].filter(Boolean).join(' ')\n  }, rest), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8m15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0M4.5 7.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5z\"\n  }));\n});\nArrowRightCircle.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  title: PropTypes.string,\n  className: PropTypes.string\n};\nexport default ArrowRightCircle;","import { Range } from \"./Range\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle) {\n            const rSum = r + range.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle) {\n            const { width, height } = range.size, edges = Math.pow(distPos.x - width, 2) + Math.pow(distPos.y - height, 2);\n            return (edges <= r ** 2 ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\n","import { isBoolean, isNumber } from \"./Utils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nconst easings = new Map();\nexport function addEasing(name, easing) {\n    if (easings.get(name)) {\n        return;\n    }\n    easings.set(name, easing);\n}\nexport function getEasing(name) {\n    return easings.get(name) || ((value) => value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random, { enable, minimumValue } = isBoolean(random)\n        ? {\n            enable: random,\n            minimumValue: 0,\n        }\n        : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** 2 + dy ** 2) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return (direction * Math.PI) / 180;\n    }\n    switch (direction) {\n        case \"top\":\n            return -Math.PI / 2;\n        case \"top-right\":\n            return -Math.PI / 4;\n        case \"right\":\n            return 0;\n        case \"bottom-right\":\n            return Math.PI / 4;\n        case \"bottom\":\n            return Math.PI / 2;\n        case \"bottom-left\":\n            return (3 * Math.PI) / 4;\n        case \"left\":\n            return Math.PI;\n        case \"top-left\":\n            return (-3 * Math.PI) / 4;\n        case \"inside\":\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case \"outside\":\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * Math.PI * 2;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position && data.position.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / 100,\n            y: (data.position.y * data.size.height) / 100,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * 100) * data.size.width) / 100,\n        y: ((data.position?.y ?? getRandom() * 100) * data.size.height) / 100,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    return input ? (input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input)) : 1;\n}\n","import { Circle } from \"./Circle\";\nimport { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","export const generatedAttribute = \"generated\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchEndEvent = \"touchend\";\nexport const touchMoveEvent = \"touchmove\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\nexport const errorPrefix = \"tsParticles - Error\";\n","import { collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, } from \"./NumberUtils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, (selector) => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some((t) => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    return value === array || (isArray(array) && array.indexOf(value) > -1);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    return areBoundsInside(calculateBounds(point, radius ?? 0), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === \"bottom\") {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === \"left\")) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === \"right\")) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === \"top\")) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map((v) => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, (t) => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, (div) => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, (selector) => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, (div) => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getValue(particle.options.bounce.horizontal),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getValue(particle.options.bounce.vertical),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, 0);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.find((t, index) => callback(t, index)) : callback(obj, 0) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * 1000,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    };\n    if (animationOptions.enable) {\n        res.decay = 1 - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case \"increase\":\n                res.status = \"increasing\";\n                break;\n            case \"decrease\":\n                res.status = \"decreasing\";\n                break;\n            case \"random\":\n                res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                break;\n        }\n        const autoStatus = animationOptions.mode === \"auto\";\n        switch (animationOptions.startValue) {\n            case \"min\":\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = \"increasing\";\n                }\n                break;\n            case \"max\":\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = \"decreasing\";\n                }\n                break;\n            case \"random\":\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === \"percent\";\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / 100) * canvasSize.width,\n            y: (positionOrSize.y / 100) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / 100) * canvasSize.width,\n            height: (positionOrSize.height / 100) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nexport function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw && updater.afterDraw(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw && updater.beforeDraw(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize && plugin.resize();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n            if (coverRgb) {\n                const coverColor = {\n                    ...coverRgb,\n                    a: cover.opacity,\n                };\n                this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                const trail = options.particles.move.trail;\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity: 1 / trail.length,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity: 1 / trail.length,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            const style = element.style;\n            style.position = originalStyle.position;\n            style.zIndex = originalStyle.zIndex;\n            style.top = originalStyle.top;\n            style.left = originalStyle.left;\n            style.width = originalStyle.width;\n            style.height = originalStyle.height;\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const priority = \"important\", style = element.style;\n            style.setProperty(\"position\", \"fixed\", priority);\n            style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n            style.setProperty(\"top\", \"0\", priority);\n            style.setProperty(\"left\", \"0\", priority);\n            style.setProperty(\"width\", \"100%\", priority);\n            style.setProperty(\"height\", \"100%\", priority);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element && element.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? 1, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, (mode) => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this._mouseTouchFinish(), 500);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n            if (theme && theme.default.auto) {\n                container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document && document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.getAnimationStatus()) {\n                    container.play(true);\n                }\n                else {\n                    container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = async () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            this._resizeTimeout = setTimeout(async () => {\n                const canvas = this.container.canvas;\n                canvas && (await canvas.windowResize());\n            }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === \"window\") {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === \"parent\" && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = (add) => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver(async (entries) => {\n                    const entry = entries.find((e) => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    await this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = (e) => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity || !interactivity.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === \"parent\") {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? 0),\n                        y: lastTouch.clientY - (canvasRect.top ?? 0),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nimport { isString } from \"../../../Utils/Utils\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = \"circle\";\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const ids = data.ids ?? data.elementId ?? data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","export class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean } from \"../../../../Utils/Utils\";\nimport { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { ResizeEvent } from \"./ResizeEvent\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.onClick.load(data.onClick ?? data.onclick);\n        const onDiv = data.onDiv ?? data.ondiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, (t) => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover ?? data.onhover);\n        if (isBoolean(data.resize)) {\n            this.resize.enable = data.resize;\n        }\n        else {\n            this.resize.load(data.resize);\n        }\n    }\n}\n","export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n","import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = \"window\";\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const detectsOn = data.detectsOn ?? data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class ManualParticle {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? 50,\n                y: data.position.y ?? 50,\n                mode: data.position.mode ?? \"percent\",\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = \"canvas\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === \"screen\") {\n                this.mode = \"screen\";\n            }\n            else {\n                this.mode = \"canvas\";\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = \"any\";\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault\";\nimport { deepExtend } from \"../../../Utils/Utils\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.delay = 0;\n        this.decay = 0;\n        this.sync = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nimport { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","export class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionsAbsorb } from \"./CollisionsAbsorb\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = \"bounce\";\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = data.rotate?.x ?? data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = data.rotate?.y ?? data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\n","export class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = \"percent\";\n        this.radius = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom\";\nimport { deepExtend } from \"../../../../../Utils/Utils\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor\";\nexport class MoveTrailFill {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    get fillColor() {\n        return this.fill.color;\n    }\n    set fillColor(value) {\n        this.fill.load({ color: value });\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined || data.fillColor !== undefined) {\n            this.fill.load(data.fill || { color: data.fillColor });\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","export class OutModes {\n    constructor() {\n        this.default = \"out\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n","import { isNumber, isObject } from \"../../../../Utils/Utils\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes ?? data.outMode ?? data.out_mode;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path ?? data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 2;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.opacity_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.opacity_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Opacity extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    get area() {\n        return this.width;\n    }\n    set area(value) {\n        this.width = value;\n    }\n    get factor() {\n        return this.height;\n    }\n    set factor(value) {\n        this.height = value;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width ?? data.area ?? data.value_area;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height ?? data.factor;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = 0;\n        this.value = 0;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = data.limit ?? data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend, isArray } from \"../../../../Utils/Utils\";\nconst charKey = \"character\", charAltKey = \"char\", imageKey = \"image\", imageAltKey = \"images\", polygonKey = \"polygon\", polygonAltKey = \"star\";\nexport class Shape {\n    constructor() {\n        this.loadShape = (item, mainKey, altKey, altOverride) => {\n            if (!item) {\n                return;\n            }\n            const itemIsArray = isArray(item), emptyValue = itemIsArray ? [] : {}, mainDifferentValues = itemIsArray !== isArray(this.options[mainKey]), altDifferentValues = itemIsArray !== isArray(this.options[altKey]);\n            if (mainDifferentValues) {\n                this.options[mainKey] = emptyValue;\n            }\n            if (altDifferentValues && altOverride) {\n                this.options[altKey] = emptyValue;\n            }\n            this.options[mainKey] = deepExtend(this.options[mainKey] ?? emptyValue, item);\n            if (!this.options[altKey] || altOverride) {\n                this.options[altKey] = deepExtend(this.options[altKey] ?? emptyValue, item);\n            }\n        };\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        return (this.options[charKey] ?? this.options[charAltKey]);\n    }\n    set character(value) {\n        this.options[charAltKey] = this.options[charKey] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        return (this.options[imageKey] ?? this.options[imageAltKey]);\n    }\n    set image(value) {\n        this.options[imageAltKey] = this.options[imageKey] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        return (this.options[polygonKey] ?? this.options[polygonAltKey]);\n    }\n    set polygon(value) {\n        this.options[polygonAltKey] = this.options[polygonKey] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const options = data.options ?? data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, charKey, charAltKey, true);\n        this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\n        this.loadShape(data.image ?? data.images, imageKey, imageAltKey, true);\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 5;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.size_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.size_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { SizeAnimation } from \"./SizeAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Size extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\nimport { AnimatableColor } from \"../AnimatableColor\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        if (data.groups !== undefined) {\n            for (const group in data.groups) {\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        const collisions = data.move?.collisions ?? data.move?.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke ?? data.shape?.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, (t) => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.plugins.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { Background } from \"./Background/Background\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { FullScreen } from \"./FullScreen/FullScreen\";\nimport { Interactivity } from \"./Interactivity/Interactivity\";\nimport { ManualParticle } from \"./ManualParticle\";\nimport { Responsive } from \"./Responsive\";\nimport { Theme } from \"./Theme/Theme\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = (mode) => {\n            return (this.themes.find((theme) => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find((theme) => theme.default.value && theme.default.mode === \"any\"));\n        };\n        this._importPreset = (preset) => {\n            this.load(this._engine.plugins.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, (preset) => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina ?? data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit ?? data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen ?? data.backgroundMode;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.plugins.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find((t) => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(\"dark\")?.name;\n        this.defaultThemes.light = this._findDefaultTheme(\"light\")?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find((t) => t.mode === \"screen\" && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch && mediaMatch.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? \"dark\" : \"light\");\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = engine.plugins.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && (await interactor.interact(delta));\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode && interactor.handleClickMode(mode);\n        }\n    }\n    init() {\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && (await interactor.interact(particle, delta));\n        }\n    }\n    async reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && interactor.reset(particle);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && interactor.reset(particle);\n        }\n    }\n}\n","import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * 2;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = 0) => {\n            for (const [, plugin] of container.plugins) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-horizontal\"],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-vertical\"],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n                return res;\n            }\n            const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value), radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset), range = {\n                left: radOffset - rad / 2,\n                right: radOffset + rad / 2,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = 0) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries;\n            if (retries >= 0 && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find((particle) => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = (color) => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor(((this.roll.angle ?? 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = (position) => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? 0,\n                mode: this.options.move.center.mode ?? \"percent\",\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case \"inside\":\n                    this.outType = \"inside\";\n                    break;\n                case \"outside\":\n                    this.outType = \"outside\";\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._loadShapeData = (shapeOptions, reduceDuplicates) => {\n            const shapeData = shapeOptions.options[this.shape];\n            if (!shapeData) {\n                return;\n            }\n            return deepExtend({\n                close: shapeOptions.close,\n                fill: shapeOptions.fill,\n            }, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        };\n        this._engine = engine;\n        this.init(id, position, overrideOptions, group);\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n        if (pathGenerator) {\n            pathGenerator.reset(this);\n        }\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.fill = true;\n        this.pathRotation = false;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const shapeOptions = particlesOptions.shape;\n        if (overrideOptions && overrideOptions.shape && overrideOptions.shape.type) {\n            const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            if (shape) {\n                this.shape = shape;\n                shapeOptions.load(overrideOptions.shape);\n            }\n        }\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.fill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.close = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer && drawer.loadShape) {\n            drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of container.particles.movers) {\n            mover.init && mover.init(this);\n        }\n        if (drawer && drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.particleCreated && plugin.particleCreated(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset && updater.reset(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < 4; i++) {\n                this._subs.push(new QuadTree(new Rectangle(x + (width / 2) * (i % 2), y + (height / 2) * (Math.round(i / 2) - (i % 2)), width / 2, height / 2), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some((sub) => sub.insert(point));\n    }\n    query(range, check, found) {\n        const res = found || [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                sub.query(range, check, res);\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { errorPrefix } from \"./Utils/Constants\";\nconst qTreeCapacity = 4;\nconst qTreeRectangle = (canvasSize) => {\n    return new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._applyDensity = (options, manualCount, group) => {\n            if (!options.number.density?.enable) {\n                return;\n            }\n            const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) => t.group === group).length);\n            this.limit = numberOptions.limit * densityFactor;\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = (densityOptions) => {\n            const container = this._container;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return 1;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this.pool.pop();\n                if (particle) {\n                    particle.init(this._nextId, position, overrideOptions, group);\n                }\n                else {\n                    particle = new Particle(this._engine, this._nextId, this._container, position, overrideOptions, group);\n                }\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(\"particleAdded\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n                return;\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            particle.destroy(override);\n            const zIdx = this._zArray.indexOf(particle);\n            this._array.splice(index, 1);\n            this._zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this._container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this._container;\n        container.canvas.clear();\n        await this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    init() {\n        const container = this._container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this._interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index < 0 || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            this._removeParticle(i--, group, override) && deleted++;\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups;\n        for (const group in groups) {\n            this._applyDensity(groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.update && plugin.update(delta);\n        }\n        for (const particle of this._array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                if (plugin.particleUpdate) {\n                    plugin.particleUpdate(particle, delta);\n                }\n            }\n            for (const mover of this.movers) {\n                mover.isEnabled(particle) && mover.move(particle, delta);\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            this.pool.push(...particlesToDelete);\n        }\n        await this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n        if (this.needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = zArray[zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = 1;\n        this.reduceFactor = 1;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { getLogger, isFunction } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => p.velocity,\n    init: () => {\n    },\n    update: () => {\n    },\n    reset: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                (entry.isIntersecting ? this.play : this.pause)();\n            }\n        };\n        this._nextFrame = async (timestamp) => {\n            try {\n                if (!this.smooth &&\n                    this.lastFrameTime !== undefined &&\n                    timestamp < this.lastFrameTime + 1000 / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this.lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this.lastFrameTime, this.fpsLimit, this.smooth);\n                this.addLifeTime(delta.value);\n                this.lastFrameTime = timestamp;\n                if (delta.value > 1000) {\n                    this.draw(false);\n                    return;\n                }\n                await this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.getAnimationStatus()) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator ?? defaultPathGenerator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            drawer.destroy && drawer.destroy(this);\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = requestAnimationFrame(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this._nextFrame(timestamp);\n        });\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode && plugin.handleClickMode(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this._lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            drawer.init && (await drawer.init(this));\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.init && (await plugin.init());\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup && plugin.particlesSetup();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause && plugin.pause();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = { ...defaultPathGenerator };\n        if (isFunction(pathOrGenerator)) {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    plugin.start && (await plugin.start());\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop && plugin.stop();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners && listeners.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) => t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        !this.getPathGenerator(type) && this.pathGenerators.set(type, pathGenerator);\n    }\n    addPlugin(plugin) {\n        !this.getPlugin(plugin.id) && this.plugins.push(plugin);\n    }\n    addPreset(presetKey, options, override = false) {\n        (override || !this.getPreset(presetKey)) && this.presets.set(presetKey, options);\n    }\n    addShapeDrawer(types, drawer) {\n        executeOnSingleOrMultiple(types, (type) => {\n            !this.getShapeDrawer(type) && this.drawers.set(type, drawer);\n        });\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            plugin.needsPlugin(container.actualOptions) && res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            updater.loadOptions && updater.loadOptions(options, ...sourceOptions);\n        }\n    }\n}\n","import { errorPrefix, generatedAttribute } from \"./Utils/Constants\";\nimport { getLogger, isBoolean, isFunction, isNumber, isString, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { Container } from \"./Container\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher\";\nimport { Plugins } from \"./Utils/Plugins\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nfunction isParamsEmpty(params) {\n    return !params.id && !params.element && !params.url && !params.options;\n}\nfunction isParams(obj) {\n    return !isParamsEmpty(obj);\n}\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = new Plugins(this);\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get version() {\n        return \"2.12.0\";\n    }\n    addConfig(nameOrConfig, config) {\n        if (isString(nameOrConfig)) {\n            if (config) {\n                config.name = nameOrConfig;\n                this._configs.set(nameOrConfig, config);\n            }\n        }\n        else {\n            this._configs.set(nameOrConfig.name ?? \"default\", nameOrConfig);\n        }\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh(refresh);\n    }\n    async addShape(shape, drawer, initOrRefresh, afterEffectOrRefresh, destroyOrRefresh, refresh = true) {\n        let customDrawer;\n        let realRefresh = refresh, realInit, realAfterEffect, realDestroy;\n        if (isBoolean(initOrRefresh)) {\n            realRefresh = initOrRefresh;\n            realInit = undefined;\n        }\n        else {\n            realInit = initOrRefresh;\n        }\n        if (isBoolean(afterEffectOrRefresh)) {\n            realRefresh = afterEffectOrRefresh;\n            realAfterEffect = undefined;\n        }\n        else {\n            realAfterEffect = afterEffectOrRefresh;\n        }\n        if (isBoolean(destroyOrRefresh)) {\n            realRefresh = destroyOrRefresh;\n            realDestroy = undefined;\n        }\n        else {\n            realDestroy = destroyOrRefresh;\n        }\n        if (isFunction(drawer)) {\n            customDrawer = {\n                afterEffect: realAfterEffect,\n                destroy: realDestroy,\n                draw: drawer,\n                init: realInit,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh(realRefresh);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (!item || item.destroyed) {\n            dom.splice(index, 1);\n            return;\n        }\n        return item;\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    async load(tagIdOrOptionsOrParams, options) {\n        return this.loadFromArray(tagIdOrOptionsOrParams, options);\n    }\n    async loadFromArray(tagIdOrOptionsOrParams, optionsOrIndex, index) {\n        let params;\n        if (!isParams(tagIdOrOptionsOrParams)) {\n            params = {};\n            if (isString(tagIdOrOptionsOrParams)) {\n                params.id = tagIdOrOptionsOrParams;\n            }\n            else {\n                params.options = tagIdOrOptionsOrParams;\n            }\n            if (isNumber(optionsOrIndex)) {\n                params.index = optionsOrIndex;\n            }\n            else {\n                params.options = optionsOrIndex ?? params.options;\n            }\n            params.index = index ?? params.index;\n        }\n        else {\n            params = tagIdOrOptionsOrParams;\n        }\n        return this._loadParams(params);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        let url, id;\n        if (isNumber(pathConfigJson) || pathConfigJson === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = pathConfigJson;\n        }\n        return this._loadParams({ id: id, url, index });\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        this.dom().forEach((t) => t.refresh());\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options, index) {\n        const params = { index };\n        if (isString(id)) {\n            params.id = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (element instanceof HTMLElement) {\n            params.element = element;\n        }\n        else {\n            params.options = element;\n        }\n        if (isNumber(options)) {\n            params.index = options;\n        }\n        else {\n            params.options = options ?? params.options;\n        }\n        return this._loadParams(params);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        const params = {};\n        if (id instanceof HTMLElement) {\n            params.element = id;\n            params.url = element;\n            params.index = pathConfigJson;\n        }\n        else {\n            params.id = id;\n            params.element = element;\n            params.url = pathConfigJson;\n            params.index = index;\n        }\n        return this._loadParams(params);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n    async _loadParams(params) {\n        const id = params.id ?? `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        let domContainer = params.element ?? document.getElementById(id);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = id;\n            document.body.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this.dom(), oldIndex = dom.findIndex((v) => v.id === id);\n        if (oldIndex >= 0) {\n            const old = this.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n","import { init } from \"./init\";\nimport { isSsr } from \"./Utils/Utils\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports\";\nexport * from \"./export-types\";\nexport { tsParticles };\n","import { Engine } from \"./Core/Engine\";\nimport { HslColorManager } from \"./Utils/HslColorManager\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\nimport { addColorManager } from \"./Utils/ColorUtils\";\nexport function init() {\n    const rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\n    addColorManager(rgbColorManager);\n    addColorManager(hslColorManager);\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n","import { Vector3d } from \"./Vector3d\";\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, 0);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = \"auto\";\n        this.startValue = \"random\";\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n","import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { isArray, isString, itemFromArray } from \"./Utils\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\n    return result\n        ? {\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n            b: parseInt(result[3], 16),\n            g: parseInt(result[2], 16),\n            r: parseInt(result[1], 16),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0,\n    };\n    if (max !== min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n        res.h += 360;\n    }\n    if (res.h >= 360) {\n        res.h -= 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    return stringToRgba(input)?.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const result = { b: 0, g: 0, r: 0 }, hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100,\n    };\n    if (!hslPercent.s) {\n        result.r = result.g = result.b = hslPercent.l;\n    }\n    else {\n        const q = hslPercent.l < 0.5\n            ? hslPercent.l * (1 + hslPercent.s)\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n        colorValue.status = \"increasing\";\n        colorValue.loops = 0;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = 0;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * 1000;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n","import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, 0, 0, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * (transform.a ?? 1),\n        b: rotateData.sin * (transform.b ?? 1),\n        c: -rotateData.sin * (transform.c ?? 1),\n        d: rotateData.cos * (transform.d ?? 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    context.beginPath();\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? 0;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (strokeWidth > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer || !drawer.afterEffect) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (data?.value === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n","export class Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\n","import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions\";\nimport { Random } from \"./Random\";\nimport { isBoolean } from \"../../Utils/Utils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ValueWithRandom {\n    constructor() {\n        this.random = new Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (isBoolean(data.random)) {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { errorPrefix } from \"./Constants\";\nimport { isNumber } from \"../../Utils/Utils\";\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? 0;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length;\n        if (length != 0) {\n            this.multTo(1.0 / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\n"],"names":["isObject","val","deepCompare","obj1","obj2","excludeKeyFn","arguments","length","undefined","keys1","Object","keys","filter","key","keys2","value1","value2","Array","isArray","deepCompareArrays","arr1","arr2","i","val1","val2","defaultId","Particles","Component","constructor","props","super","this","state","init","library","destroy","setState","shouldComponentUpdate","nextProps","_nextProps$options","_this$props$options","nextOptions","options","params","currentOptions","url","id","canvasClassName","className","height","width","style","loaded","startsWith","componentDidUpdate","refresh","forceUpdate","then","componentDidMount","tsParticles","async","loadParticles","componentWillUnmount","render","React","_objectSpread","_ref","_this$props$id","_this$props$options2","defaultProps","container","load","current","_options$color","_options$minDistance","_options$connectParti","_options$speed","_options$maxParticles","_options$sizeVariatio","_options$responsive","particles","selector","Error","el","document","querySelector","set","replace","fullScreen","enable","color","value","links","distance","minDistance","connectParticles","move","speed","number","maxParticles","size","min","max","sizeVariations","responsive","map","_responsive$options","_responsive$options2","_responsive$options3","_responsive$options4","_responsive$options5","maxWidth","breakpoint","_container","pauseAnimation","pause","resumeAnimation","play","initPjs","engine","particlesJS","pJSDom","tagId","pathConfigJson","callback","loadJSON","catch","setOnClickHandler","dom","initParticlesJS","window","particle","moveOptions","moveSpeed","maxSpeed","moveDrift","delta","_particle$pathGenerat","particlesOptions","pathOptions","path","lastPathTime","pathDelay","pathGenerator","generate","velocity","addTo","clamp","x","y","applyPath","gravityOptions","gravity","gravityFactor","inverse","factor","acceleration","decay","moveDecay","multTo","mult","zIndexOptions","zIndex","zVelocityFactor","zIndexFactor","velocityRate","position","vibrate","Math","sin","cos","BaseMover","_initSpin","_spinOptions$position","spinOptions","spin","spinPos","spinCenter","canvas","pos","getPosition","getDistance","spinAcceleration","getRangeValue","retina","pixelRatio","center","direction","angle","radius","isEnabled","destroyed","_particle$retina","_particle$retina$move","_particle$retina2","_particle$retina2$mov","_particle$retina$maxS","particleOptions","pxRatio","slowFactor","slow","inRange","getProximitySpeedFactor","baseSpeed","reduceFactor","drift","maxSize","getRangeMax","getRadius","updateFunc","maxCanvasSize","initialPosition","dx","dy","getDistances","dxFixed","abs","dyFixed","maxDistance","hDistance","horizontal","vDistance","vertical","misplaced","vel","getRandom","applyDistance","CircleDrawer","draw","context","circleRange","PI","arc","getSidesCount","particleInit","_shapeData$angle","shapeData","updateColorValue","colorValue","valueAnimation","decrease","_colorValue$maxLoops","_colorValue$loops","_colorValue$maxLoops2","_colorValue$delayTime","_colorValue$delayTime2","_colorValue$delayTime3","_colorValue$delayTime4","_colorValue$velocity","_colorValue$decay","maxLoops","loops","time","delayTime","offset","randomInRange","status","ColorUpdater","hslColor","rangeColorToHsl","reduceDuplicates","getHslAnimationFromHsl","animation","h","hAnimation","s","sAnimation","l","lAnimation","spawning","update","updateColor","OpacityUpdater","opacityOptions","opacity","initParticleNumericAnimationValue","opacityAnimation","sync","_particle$opacity$max","_particle$opacity$max2","_particle$opacity$loo","_particle$opacity$max3","reset","_data$maxLoops","_data$loops","_data$maxLoops2","_data$decay","_data$delayTime","_data$delayTime2","_data$delayTime3","_data$delayTime4","data","minValue","maxValue","_data$velocity","_data$velocity2","checkDestroy","updateOpacity","BounceOutMode","modes","outMode","includes","handled","plugin","plugins","particleBounce","bounds","calculateBounds","canvasSize","right","left","bounced","newVelocity","getValue","bounce","minPos","bounceHorizontal","bottom","top","bounceVertical","DestroyOutMode","_delta","outType","isPointInside","Vector","origin","moveCenter","vx","vy","remove","NoneOutMode","pRadius","OutOutMode","circVec","create","floor","newDx","newDy","atan2","wrap","warp","newPos","sizeValue","nextBounds","OutOfCanvasUpdater","_updateOutMode","updater","updaters","_outModes$bottom","_outModes$left","_outModes$right","_outModes$top","outModes","default","SizeUpdater","sizeAnimation","_particle$retina$size","sizeAnimationSpeed","_particle$size$maxLoo","_particle$size$maxLoo2","_particle$size$loops","_particle$size$maxLoo3","sizeVelocity","updateSize","loadBasic","addMover","loadBaseMover","addShape","loadCircleShape","addParticleUpdater","loadColorUpdater","loadOpacityUpdater","loadOutModesUpdater","loadSizeUpdater","ExternalInteractorBase","type","Attract","duration","easing","Attractor","_clickAttract","attract","finish","count","clicking","mousePos","interactivity","mouse","clickPosition","attractRadius","attractModeDistance","_processAttract","Circle","_hoverAttract","area","attractOptions","actualOptions","query","quadTree","p","attractFactor","getEasing","normVec","subFrom","_engine","handleClickMode","mode","setTo","initialVelocity","setTimeout","clear","interact","mouseMoveStatus","mouseMoveEvent","events","hoverEnabled","onHover","hoverMode","clickEnabled","onClick","clickMode","isInArray","_particle$interactivi","loadModeOptions","_len","sources","_key","source","Bounce","Bouncer","_processBounce","circleBounce","circleBounceDataFromParticle","mass","Rectangle","rectBounce","_processMouseBounce","tolerance","bounceModeDistance","_singleSelectorBounce","div","querySelectorAll","forEach","item","elem","offsetLeft","offsetWidth","offsetTop","offsetHeight","divs","onDiv","divModeExecute","isDivModeEnabled","BubbleBase","mix","sourceColor","executeOnSingleOrMultiple","OptionsColor","BubbleDiv","selectors","ids","t","concat","Bubble","tmp","calculateBubbleValue","particleValue","modeValue","optionsValue","ratio","Bubbler","_clickBubble","mouseClickPos","bubbleOptions","bubble","bubbleModeDistance","queryCircle","_particle$opacity$val","_particle$opacity","durationEnd","distMouse","timeSpent","Date","getTime","clickTime","sizeData","bubbleObj","optValue","bubbleModeSize","particlesObj","_process","opacityData","_hoverBubbleColor","_hoverBubble","pointDistance","_hoverBubbleSize","_hoverBubbleOpacity","mouseLeaveEvent","divBubble","finalColor","modeColor","bubbleColor","itemFromSingleOrMultiple","pColor","getFillColor","rgbToHsl","colorMix","_divBubble$opacity","_options$interactivit","_particle$opacity$val2","_particle$opacity2","modeOpacity","optOpacity","modeSize","optSize","bubbleParam","bubbleDuration","bubbleDistance","particlesParam","pObjBubble","pObj","_singleSelectorHover","repulseRadius","contains","divMode","force","ConnectLinks","Connect","lineLinked","line_linked","_data$links","lineStyle","ctx","p1","p2","connectOptions","connect","gradStop","color1","color2","sourcePos","destPos","midRgb","grad","createLinearGradient","addColorStop","getStyleFromHsl","getStyleFromRgb","gradient","drawConnection","_p1$retina$linksWidth","ls","pos1","pos2","begin","end","drawLine","lineWidth","strokeStyle","stroke","drawConnectLine","linksWidth","Connector","connectModeDistance","connectModeRadius","slice","distMax","xDiff","yDiff","GrabLinks","blink","consent","Grab","drawGrab","lineColor","_particle$retina$link","beginPos","colorLine","drawGrabLine","Grabber","grab","grabModeDistance","_grabLineOptions$colo","_particle$options$lin","grabLineOptions","lineOpacity","opacityLine","optColor","grabLineColor","linksOptions","getLinkRandomColor","getLinkColor","Pauser","getAnimationStatus","Push","groups","quantity","particles_nb","setRangeValue","_data$quantity","Pusher","pushOptions","push","group","itemFromArray","groupOptions","Remove","Remover","removeNb","removeQuantity","RepulseBase","RepulseDiv","Repulse","Repulser","_clickRepulse","repulseOptions","repulse","repulseDistance","repulseModeDistance","pow","range","d","vect","_hoverRepulse","_processRepulse","divRepulse","_divRepulse$speed","repulseFactor","_singleSelectorRepulse","repulseOpts","hover","click","Slow","Slower","slowModeRadius","slowOptions","particlePos","dist","proximityFactor","InterlaceOffsets","InterlaceSteps","ByteStream","bytes","Uint8ClampedArray","getString","reduce","acc","curr","String","fromCharCode","nextByte","nextTwoBytes","readSubBlocks","blockString","readSubBlocksBin","len","blockData","Uint8Array","skipSubBlocks","parseColorTable","byteStream","colors","r","g","b","parseBlock","gif","avgAlpha","getFrameIndex","getTransparencyIndex","progressCallback","frame","frames","packedByte","localColorTableFlag","interlacedFlag","sortFlag","reserved","localColorCount","localColorTable","getColor","index","globalColorTable","a","image","ImageData","colorSpace","error","DOMException","name","EvalError","minCodeSize","imageData","clearCode","readBits","bytePos","bitPos","code","dic","pass","pixelPos","lineIndex","last","bitmap","createImageBitmap","parseImageBlock","GCreserved","disposalMethod","userInputDelayFlag","transparencyFlag","transparencyIndex","applicationExtension","identifier","authenticationCode","applicationExtensions","comments","plainTextData","charSize","foregroundColor","backgroundColor","text","parseExtensionBlock","currentColorRegex","loadImage","Promise","resolve","loading","img","Image","element","addEventListener","getLogger","errorPrefix","src","loadGifImage","_getGIFLoopAmount","gifData","gifURL","res","fetch","ok","buffer","arrayBuffer","totalTime","colorRes","pixelAspectRatio","backgroundImage","globalColorTableFlag","globalColorCount","backgroundColorIndex","copyWithin","frameIndex","incrementFrameIndex","getframeIndex","increment","newValue","Infinity","message","decodeGIF","gifLoopCount","extension","NaN","getGIFLoopAmount","_unused","downloadSvgImage","response","svgData","replaceImageColor","_imageData$replaceCol","svgColoredData","imageShape","colorStyle","preFillIndex","indexOf","substring","replaceColorSvg","imageRes","replaceColor","replace_color","svg","Blob","domUrl","URL","webkitURL","createObjectURL","revokeObjectURL","img2","ImageDrawer","loadImageShape","_imageShape$replaceCo","addImage","images","globalAlpha","_particle$gifFrame","offscreenCanvas","OffscreenCanvas","offscreenContext","getContext","_image$gifLoopCount","imageSmoothingQuality","imageSmoothingEnabled","clearRect","gifFrame","gifTime","scale","drawImage","putImageData","previousImageData","getImageData","preload","loadShape","shape","find","_ref2","_imageData$fill","_imageData$close","_image$ratio","fill","close","Preload","ImagePreloaderPlugin","getPlugin","loadOptions","preloadOptions","existing","needsPlugin","_data$gif","_data$name","imageFunc","_data$name2","addLoadImageToEngine","preloader","addPlugin","LifeDelay","ValueWithRandom","LifeDuration","random","minimumValue","Life","delay","LifeUpdater","lifeOptions","life","justSpawned","widthRange","heightRange","LineDrawer","_shapeData$cap","moveTo","lineTo","lineCap","cap","ParallaxMover","isSsr","parallax","parallaxOptions","parallaxForce","canvasCenter","parallaxSmooth","smooth","centerDistance","ParticlesInteractorBase","_p1$retina$attractDis","attractDistance","rotate","ax","ay","p1Factor","p2Factor","updateAbsorb","r1","r2","collisions","absorb","fixBounceSpeed","collisionMaxSpeed","resolveCollision","unbreakable","Collider","radius1","radius2","round","z","CircleWarp","point","intersects","rect","circle","biggerCircle","rectSW","LinksShadow","blur","LinksTriangle","frequency","Links","shadow","triangles","getLinkDistance","optDistance","absDiffs","warpDistances","sqrt","Linker","_setColor","linkContainer","linkColor","linksColor","linksColors","get","Map","_p1$retina$linksDista","linkOpt1","linksDistance","linkOpt2","some","destination","loadParticlesOptions","_source$links","setLinkFrequency","dictionary","sort","join","LinkInstance","_drawLinkLine","link","p1LinksOptions","_p1$options$twinkle","twinkle","lines","twinkleFreq","twinkleRgb","rangeColorToRgb","backgroundMask","drawn","pi1","pi2","endNE","d1","yi","endSW","d2","xi","endSE","d3","globalCompositeOperation","composite","shadowColor","shadowBlur","drawLinkLine","_drawLinkTriangle","link1","link2","_triangleOptions$opac","triangleOptions","p3","opacityTriangle","_p1$retina$linksDista2","pos3","colorTriangle","drawTriangle","fillStyle","drawLinkTriangle","_drawTriangles","p1Links","_options$links","_p2$options$links","_p2$links","vertices","linkFreq","_getLinkFrequency","findIndex","vertex","_getTriangleFrequency","_freqs","drawParticle","particleCreated","particleDestroyed","LinksPlugin","loadParticlesLinksInteraction","addInteractor","loadLinksInteraction","loadLinksPlugin","PolygonDrawerBase","start","getCenter","side","getSidesData","sideCount","numerator","denominator","decimalSides","interiorAngleDegrees","interiorAngle","beginPath","translate","_polygon$sides","polygon","sides","nb_sides","PolygonDrawer","TriangleDrawer","loadPolygonShape","loadGenericPolygonShape","loadTriangleShape","RotateAnimation","Rotate","RotateUpdater","rotateOptions","pathRotation","rotateDirection","rotateAnimation","rotation","_particle$rotate$valu","_particle$rotate","_rotate$velocity","_rotate$decay","updateRotate","fixFactor","SquareDrawer","fixedRadius","fixedDiameter","StarDrawer","_particle$starInset","inset","starInset","_star$sides","star","_star$inset","StrokeColorUpdater","_stroke$opacity","_stroke$color","_rangeColorToHsl","strokeWidth","strokeOpacity","strokeAnimation","strokeHslColor","strokeColor","updateStrokeColor","validTypes","TextDrawer","_character$style","_character$weight","_character$font","character","textData","randomIndexData","weight","font","offsetX","fillText","strokeText","shapeOptions","promises","loadFont","all","loadSlim","loadParallaxMover","loadExternalAttractInteraction","loadExternalBounceInteraction","loadExternalBubbleInteraction","loadExternalConnectInteraction","loadExternalGrabInteraction","loadExternalPauseInteraction","loadExternalPushInteraction","loadExternalRemoveInteraction","loadExternalRepulseInteraction","loadExternalSlowInteraction","loadParticlesAttractInteraction","loadParticlesCollisionsInteraction","addEasing","loadEasingQuadPlugin","loadLineShape","loadSquareShape","loadStarShape","loadTextShape","loadLifeUpdater","loadRotateUpdater","loadStrokeColorUpdater","Range","_excluded","_extends","assign","bind","n","e","hasOwnProperty","call","apply","ArrowRightCircle","forwardRef","ref","_ref$color","_ref$size","_ref$title","title","_ref$className","rest","o","_objectWithoutPropertiesLoose","getOwnPropertySymbols","propertyIsEnumerable","_objectWithoutProperties","xmlns","viewBox","Boolean","fillRule","propTypes","PropTypes","distPos","_random","easings","num","comp1","comp2","weight1","weight2","getRangeMin","isNumber","isBoolean","pointA","pointB","getParticleDirectionAngle","getParticleBaseVelocity","baseVelocity","collisionVelocity","v1","v2","m1","m2","calcExactPositionOrRandomFromSize","_data$position$x2","_data$position5","_data$position$y2","_data$position6","parseAlpha","input","endsWith","parseFloat","w","size2","w2","h2","generatedAttribute","mouseDownEvent","mouseUpEvent","mouseOutEvent","touchStartEvent","touchEndEvent","touchMoveEvent","touchCancelEvent","resizeEvent","visibilityChangeEvent","_logger","debug","console","info","log","verbose","warning","warn","rectSideBounce","pSide","pOtherSide","rectSide","rectOtherSide","safeMatchMedia","matchMedia","safeMutationObserver","MutationObserver","array","fonts","arrayRandomIndex","inside","areBoundsInside","deepExtend","sourceIsArray","destDict","v","findItemFromSingleOrMultiple","singleDivModeExecute","matches","checkSelector","getMass","xVelocityDiff","yVelocityDiff","sub","xDist","yDist","u1","u2","vFinal1","vFinal2","divBounds","resH","resV","obj","useIndex","valueRange","animationOptions","autoStatus","startValue","initialValue","getPositionOrSize","positionOrSize","_","arg","isString","isFunction","setTransformValue","newFactor","_factor$key","Canvas","_applyPostDrawUpdaters","_postDrawUpdaters","afterDraw","_applyPreDrawUpdaters","zOpacity","colorStyles","transform","_preDrawUpdaters","getColorStyles","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","_resizePlugins","resize","_getPluginParticleColors","fColor","sColor","_colorPlugins","particleFillColor","particleStrokeColor","_initCover","cover","coverRgb","coverColor","_coverColorStyle","_initStyle","_fullScreen","_originalStyle","_setFullScreenStyle","_resetOriginalStyle","setProperty","_initTrail","trail","trailFill","fillColor","_trailFill","reject","createElement","evt","_paintBase","baseColor","paintBase","_paintImage","paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","observe","attributes","originalStyle","_mutationObserver","priority","toString","_context","_generated","paint","stop","cb","_particle$getStrokeCo","pfColor","psColor","getStrokeColor","_particle$bubble$opac","_particle$strokeOpaci","zOpacityFactor","opacityRate","zStrokeOpacity","sizeRate","drawParticlePlugin","drawPlugin","obs","records","record","attributeName","initUpdaters","initPlugins","background","elementStyle","backgroundPosition","backgroundRepeat","repeat","backgroundSize","loadCanvas","dataset","ariaHidden","newSize","oldSize","started","resizeFactor","windowResize","needsRefresh","updateActualOptions","setDensity","manageListener","event","handler","add","addOptions","passive","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","_canPush","mouseInteractivity","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","dark","light","theme","themes","auto","loadTheme","_handleVisibilityChange","pauseOnBlur","hidden","pageHidden","_handleWindowResize","_resizeTimeout","clearTimeout","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","mouseMove","touchStart","touchMove","touchEndClick","mouseUp","mouseDown","touchEnd","mouseLeave","touchCancel","_manageListeners","detectType","detectsOn","_canvasEl$parentEleme","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChange","mediaMatch","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","_resizeObserver","unobserve","entries","target","_mouseDown","downPosition","_mouseTouchClick","mousePosition","clickPositionValid","_mouseTouchMove","mouseEvent","clientRect","getBoundingClientRect","clientX","clientY","currentTarget","sourceRect","targetRect","canvasRect","offsetY","_mouseEvent$offsetX","_mouseEvent$offsetY","_mouseEvent$offsetX2","_mouseEvent$offsetY2","_canvasRect$left","_canvasRect$top","touchEvent","lastTouch","touches","_touchEnd","from","changedTouches","touch","_touches","delete","_touchEndClick","_touchStart","performance","now","addListeners","removeListeners","Background","BackgroundMaskCover","BackgroundMask","FullScreen","ClickEvent","DivEvent","elementId","_data$ids","Parallax","HoverEvent","ResizeEvent","Events","onclick","ondiv","onhover","_data$onClick","_data$onDiv","_data$onHover","Modes","interactors","interactor","Interactivity","detect_on","_data$detectsOn","ManualParticle","_data$position$x","_data$position$y","_data$position$mode","Responsive","ThemeDefault","Theme","ColorAnimation","HslAnimation","AnimatableColor","colorAnimation","CollisionsAbsorb","CollisionsOverlap","retries","ParticlesBounceFactor","ParticlesBounce","Collisions","overlap","MoveAngle","MoveAttract","rotateX","rotateY","_data$rotate$x","_data$rotate","_data$rotate$y","_data$rotate2","MoveCenter","MoveGravity","MovePath","generator","MoveTrailFill","MoveTrail","OutModes","_data$bottom","_data$left","_data$right","_data$top","Spin","Move","straight","noise","out_mode","_data$outModes","_data$path","OpacityAnimation","RangedAnimationOptions","opacity_min","Opacity","anim","_data$animation","ParticlesDensity","value_area","_data$width","_data$height","ParticlesNumber","density","limit","_data$limit","Shadow","charKey","charAltKey","imageKey","imageAltKey","polygonKey","polygonAltKey","Shape","mainKey","altKey","altOverride","_this$options$mainKey","itemIsArray","emptyValue","mainDifferentValues","altDifferentValues","_this$options$altKey","_this$options$charKey","custom","_this$options$imageKe","_this$options$polygon","_value","_data$options","_data$image","_this$options$shape","SizeAnimation","size_min","Size","Stroke","ZIndex","ParticlesOptions","_data$move$collisions","_data$move","_data$move2","_data$stroke","_data$shape","_this$groups$group","strokeToLoad","sourceOptionsArr","sourceOptions","_len2","_key2","Options","_findDefaultTheme","_this$themes$find","_importPreset","preset","getPreset","autoPlay","detectRetina","fpsLimit","manualParticles","pauseOnOutsideViewport","zLayers","backgroundMode","fps_limit","retina_detect","_data$detectRetina","_data$fpsLimit","_data$fullScreen","_this$_findDefaultThe","_this$_findDefaultThe2","optResponsive","existingTheme","optTheme","setResponsive","defaultOptions","responsiveOptions","screen","availWidth","setTheme","chosenTheme","clientDarkMode","defaultTheme","InteractionManager","_interactors","getInteractors","_externalInteractors","_particleInteractors","externalInteract","particlesInteract","fixOutMode","checkModes","diameter","coord","maxCoord","setCb","Particle","overrideOptions","_this","_calcPosition","tryCount","pluginPos","particlePosition","Vector3d","exactPosition","fixHorizontal","fixVertical","_checkOverlap","_calculateVelocity","copy","rad","radOffset","collisionsOptions","overlapOptions","_getRollColor","_this$roll$angle","roll","backColor","alter","backFactor","backSum","alterHsl","_initPosition","_this$options$move$ce","_this$options$move$ce2","zIndexValue","_loadShapeData","override","_this$bubble$color","getHslFromAnimation","_this$bubble$radius","_this$bubble$color2","_shapeData$fill","_shapeData$close","_drawer","ignoresResizeRatio","mainOptions","shapeType","overrideShapeType","getPathGenerator","addPath","initParticle","needsSort","lastZIndex","drawer","drawers","getShapeDrawer","sideCountFunc","mover","movers","isInsideCanvas","isVisible","Point","QuadTree","rectangle","capacity","_subdivide","_subs","_divided","_points","insert","check","found","queryRectangle","qTreeRectangle","_applyDensity","manualCount","_options$number$densi","numberOptions","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","densityOptions","_pushParticle","initializer","pool","pop","_nextId","canAdd","_array","_zArray","dispatchEvent","_removeParticle","zIdx","splice","_interactionManager","getMovers","getUpdaters","addManualParticles","addParticle","countToRemove","condition","particlesInitialization","pathGenerators","j","_groupOptions$number","nb","pushing","redraw","removeAt","deleted","particlesToDelete","Set","particleUpdate","checkDelete","has","zArray","Retina","devicePixelRatio","moveDistance","guardCheck","loadContainerOptions","defaultPathGenerator","Container","_intersectionManager","entry","isIntersecting","_nextFrame","_this$lastFrameTime","lastFrameTime","timestamp","initDelta","addLifeTime","alive","_delay","_duration","_lifeTime","_firstStart","_paused","_sourceOptions","_initialSourceOptions","_options","_eventListeners","IntersectionObserver","_intersectionObserver","addClickHandler","clickOrTouchHandler","posRetina","touched","touchMoved","touchStartHandler","touchMoveHandler","radiusX","radiusY","touchCancelHandler","mainArr","idx","refreshTime","_drawAnimationFrame","requestAnimationFrame","export","supported","blob","shapes","getSupportedShapes","availablePlugins","getAvailablePlugins","particlesSetup","_currentTheme","cancelAnimationFrame","needsUpdate","setNoise","noiseOrGenerator","setPath","pathOrGenerator","oldGenerator","_delayTimeout","HTMLElement","newMaxWidth","responsiveMaxWidth","EventDispatcher","_listeners","listener","arr","args","listeners","hasEventListener","removeAllEventListeners","getItemsFromInitializer","initializers","values","Plugins","_initializers","presets","initInteractor","addParticleMover","initMover","initUpdater","addPathGenerator","addPreset","presetKey","addShapeDrawer","types","Engine","_configs","_domArray","_eventDispatcher","_initialized","configs","config","version","addConfig","nameOrConfig","_nameOrConfig$name","interactorInitializer","moverInitializer","updaterInitializer","initOrRefresh","afterEffectOrRefresh","destroyOrRefresh","customDrawer","realInit","realAfterEffect","realDestroy","realRefresh","afterEffect","domItem","tagIdOrOptionsOrParams","loadFromArray","optionsOrIndex","isParams","_loadParams","setJSON","_params$id","_params$element","fallback","json","getDataFromUrl","domContainer","getElementById","body","append","oldIndex","old","tagName","toLowerCase","existingCanvases","getElementsByTagName","appendChild","newItem","HslColorManager","stringPrefix","handleColor","_colorValue$hsl","hsl","hslToRgb","handleRangeColor","_colorValue$hsl2","parseString","result","exec","hslaToRgba","parseInt","RgbColorManager","_colorValue$rgb","rgbColor","rgb","_colorValue$rgb2","rgbColorManager","hslColorManager","addColorManager","xOrCoords","clone","AnimationOptions","randomColorValue","midColorValue","colorManagers","manager","hue2rgb","q","stringToRgba","hexFixed","colorToRgb","getRandomRgbColor","stringToRgb","g1","b1","hslPercent","hsla","rgbResult","fixedMin","size1","rgb1","rgb2","_p1$getFillColor","_p2$getFillColor","destColor","resColor","setColorAnimation","closePath","dimension","fillRect","_transform$a","_transform$b","_transform$c","_transform$d","_particle$strokeWidth","rotateData","transformData","c","setTransform","shadowOffsetX","shadowOffsetY","drawShape","drawShapeAfterEffect","Random","_updateFromAngle","coords3d","getLengthSq","distanceTo","distanceToSq","divTo","normalize","v3d"],"sourceRoot":""}